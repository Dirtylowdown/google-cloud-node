// Copyright 2015 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file google/api/backend.proto (package google.api, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * `Backend` defines the backend configuration for a service.
 *
 * @generated from message google.api.Backend
 */
export class Backend extends Message<Backend> {
  /**
   * A list of API backend rules that apply to individual API methods.
   *
   * **NOTE:** All service configuration rules follow "last one wins" order.
   *
   * @generated from field: repeated google.api.BackendRule rules = 1;
   */
  rules: BackendRule[] = [];

  constructor(data?: PartialMessage<Backend>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.Backend";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "rules", kind: "message", T: BackendRule, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Backend {
    return new Backend().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Backend {
    return new Backend().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Backend {
    return new Backend().fromJsonString(jsonString, options);
  }

  static equals(a: Backend | PlainMessage<Backend> | undefined, b: Backend | PlainMessage<Backend> | undefined): boolean {
    return proto3.util.equals(Backend, a, b);
  }
}

/**
 * A backend rule provides configuration for an individual API element.
 *
 * @generated from message google.api.BackendRule
 */
export class BackendRule extends Message<BackendRule> {
  /**
   * Selects the methods to which this rule applies.
   *
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
   *
   * @generated from field: string selector = 1;
   */
  selector = "";

  /**
   * The address of the API backend.
   *
   * The scheme is used to determine the backend protocol and security.
   * The following schemes are accepted:
   *
   *    SCHEME        PROTOCOL    SECURITY
   *    http://       HTTP        None
   *    https://      HTTP        TLS
   *    grpc://       gRPC        None
   *    grpcs://      gRPC        TLS
   *
   * It is recommended to explicitly include a scheme. Leaving out the scheme
   * may cause constrasting behaviors across platforms.
   *
   * If the port is unspecified, the default is:
   * - 80 for schemes without TLS
   * - 443 for schemes with TLS
   *
   * For HTTP backends, use [protocol][google.api.BackendRule.protocol]
   * to specify the protocol version.
   *
   * @generated from field: string address = 2;
   */
  address = "";

  /**
   * The number of seconds to wait for a response from a request. The default
   * varies based on the request protocol and deployment environment.
   *
   * @generated from field: double deadline = 3;
   */
  deadline = 0;

  /**
   * Deprecated, do not use.
   *
   * @generated from field: double min_deadline = 4 [deprecated = true];
   * @deprecated
   */
  minDeadline = 0;

  /**
   * The number of seconds to wait for the completion of a long running
   * operation. The default is no deadline.
   *
   * @generated from field: double operation_deadline = 5;
   */
  operationDeadline = 0;

  /**
   * @generated from field: google.api.BackendRule.PathTranslation path_translation = 6;
   */
  pathTranslation = BackendRule_PathTranslation.PATH_TRANSLATION_UNSPECIFIED;

  /**
   * Authentication settings used by the backend.
   *
   * These are typically used to provide service management functionality to
   * a backend served on a publicly-routable URL. The `authentication`
   * details should match the authentication behavior used by the backend.
   *
   * For example, specifying `jwt_audience` implies that the backend expects
   * authentication via a JWT.
   *
   * When authentication is unspecified, the resulting behavior is the same
   * as `disable_auth` set to `true`.
   *
   * Refer to https://developers.google.com/identity/protocols/OpenIDConnect for
   * JWT ID token.
   *
   * @generated from oneof google.api.BackendRule.authentication
   */
  authentication: {
    /**
     * The JWT audience is used when generating a JWT ID token for the backend.
     * This ID token will be added in the HTTP "authorization" header, and sent
     * to the backend.
     *
     * @generated from field: string jwt_audience = 7;
     */
    value: string;
    case: "jwtAudience";
  } | {
    /**
     * When disable_auth is true, a JWT ID token won't be generated and the
     * original "Authorization" HTTP header will be preserved. If the header is
     * used to carry the original token and is expected by the backend, this
     * field must be set to true to preserve the header.
     *
     * @generated from field: bool disable_auth = 8;
     */
    value: boolean;
    case: "disableAuth";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * The protocol used for sending a request to the backend.
   * The supported values are "http/1.1" and "h2".
   *
   * The default value is inferred from the scheme in the
   * [address][google.api.BackendRule.address] field:
   *
   *    SCHEME        PROTOCOL
   *    http://       http/1.1
   *    https://      http/1.1
   *    grpc://       h2
   *    grpcs://      h2
   *
   * For secure HTTP backends (https://) that support HTTP/2, set this field
   * to "h2" for improved performance.
   *
   * Configuring this field to non-default values is only supported for secure
   * HTTP backends. This field will be ignored for all other backends.
   *
   * See
   * https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids
   * for more details on the supported values.
   *
   * @generated from field: string protocol = 9;
   */
  protocol = "";

  constructor(data?: PartialMessage<BackendRule>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.BackendRule";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "selector", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "deadline", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 4, name: "min_deadline", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 5, name: "operation_deadline", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 6, name: "path_translation", kind: "enum", T: proto3.getEnumType(BackendRule_PathTranslation) },
    { no: 7, name: "jwt_audience", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "authentication" },
    { no: 8, name: "disable_auth", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "authentication" },
    { no: 9, name: "protocol", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BackendRule {
    return new BackendRule().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BackendRule {
    return new BackendRule().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BackendRule {
    return new BackendRule().fromJsonString(jsonString, options);
  }

  static equals(a: BackendRule | PlainMessage<BackendRule> | undefined, b: BackendRule | PlainMessage<BackendRule> | undefined): boolean {
    return proto3.util.equals(BackendRule, a, b);
  }
}

/**
 * Path Translation specifies how to combine the backend address with the
 * request path in order to produce the appropriate forwarding URL for the
 * request.
 *
 * Path Translation is applicable only to HTTP-based backends. Backends which
 * do not accept requests over HTTP/HTTPS should leave `path_translation`
 * unspecified.
 *
 * @generated from enum google.api.BackendRule.PathTranslation
 */
export enum BackendRule_PathTranslation {
  /**
   * @generated from enum value: PATH_TRANSLATION_UNSPECIFIED = 0;
   */
  PATH_TRANSLATION_UNSPECIFIED = 0,

  /**
   * Use the backend address as-is, with no modification to the path. If the
   * URL pattern contains variables, the variable names and values will be
   * appended to the query string. If a query string parameter and a URL
   * pattern variable have the same name, this may result in duplicate keys in
   * the query string.
   *
   * # Examples
   *
   * Given the following operation config:
   *
   *     Method path:        /api/company/{cid}/user/{uid}
   *     Backend address:    https://example.cloudfunctions.net/getUser
   *
   * Requests to the following request paths will call the backend at the
   * translated path:
   *
   *     Request path: /api/company/widgetworks/user/johndoe
   *     Translated:
   *     https://example.cloudfunctions.net/getUser?cid=widgetworks&uid=johndoe
   *
   *     Request path: /api/company/widgetworks/user/johndoe?timezone=EST
   *     Translated:
   *     https://example.cloudfunctions.net/getUser?timezone=EST&cid=widgetworks&uid=johndoe
   *
   * @generated from enum value: CONSTANT_ADDRESS = 1;
   */
  CONSTANT_ADDRESS = 1,

  /**
   * The request path will be appended to the backend address.
   *
   * # Examples
   *
   * Given the following operation config:
   *
   *     Method path:        /api/company/{cid}/user/{uid}
   *     Backend address:    https://example.appspot.com
   *
   * Requests to the following request paths will call the backend at the
   * translated path:
   *
   *     Request path: /api/company/widgetworks/user/johndoe
   *     Translated:
   *     https://example.appspot.com/api/company/widgetworks/user/johndoe
   *
   *     Request path: /api/company/widgetworks/user/johndoe?timezone=EST
   *     Translated:
   *     https://example.appspot.com/api/company/widgetworks/user/johndoe?timezone=EST
   *
   * @generated from enum value: APPEND_PATH_TO_ADDRESS = 2;
   */
  APPEND_PATH_TO_ADDRESS = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(BackendRule_PathTranslation)
proto3.util.setEnumType(BackendRule_PathTranslation, "google.api.BackendRule.PathTranslation", [
  { no: 0, name: "PATH_TRANSLATION_UNSPECIFIED" },
  { no: 1, name: "CONSTANT_ADDRESS" },
  { no: 2, name: "APPEND_PATH_TO_ADDRESS" },
]);

