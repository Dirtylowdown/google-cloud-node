// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file google/api/serviceusage/v1/resources.proto (package google.api.serviceusage.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Api, Message, proto3 } from "@bufbuild/protobuf";
import { Documentation } from "../../documentation_pb.js";
import { Quota } from "../../quota_pb.js";
import { Authentication } from "../../auth_pb.js";
import { Usage } from "../../usage_pb.js";
import { Endpoint } from "../../endpoint_pb.js";
import { MonitoredResourceDescriptor } from "../../monitored_resource_pb.js";
import { Monitoring } from "../../monitoring_pb.js";

/**
 * Whether or not a service has been enabled for use by a consumer.
 *
 * @generated from enum google.api.serviceusage.v1.State
 */
export enum State {
  /**
   * The default value, which indicates that the enabled state of the service
   * is unspecified or not meaningful. Currently, all consumers other than
   * projects (such as folders and organizations) are always in this state.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The service cannot be used by this consumer. It has either been explicitly
   * disabled, or has never been enabled.
   *
   * @generated from enum value: DISABLED = 1;
   */
  DISABLED = 1,

  /**
   * The service has been explicitly enabled for use by this consumer.
   *
   * @generated from enum value: ENABLED = 2;
   */
  ENABLED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(State)
proto3.util.setEnumType(State, "google.api.serviceusage.v1.State", [
  { no: 0, name: "STATE_UNSPECIFIED" },
  { no: 1, name: "DISABLED" },
  { no: 2, name: "ENABLED" },
]);

/**
 * A service that is available for use by the consumer.
 *
 * @generated from message google.api.serviceusage.v1.Service
 */
export class Service extends Message<Service> {
  /**
   * The resource name of the consumer and service.
   *
   * A valid name would be:
   * - projects/123/services/serviceusage.googleapis.com
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The resource name of the consumer.
   *
   * A valid name would be:
   * - projects/123
   *
   * @generated from field: string parent = 5;
   */
  parent = "";

  /**
   * The service configuration of the available service.
   * Some fields may be filtered out of the configuration in responses to
   * the `ListServices` method. These fields are present only in responses to
   * the `GetService` method.
   *
   * @generated from field: google.api.serviceusage.v1.ServiceConfig config = 2;
   */
  config?: ServiceConfig;

  /**
   * Whether or not the service has been enabled for use by the consumer.
   *
   * @generated from field: google.api.serviceusage.v1.State state = 4;
   */
  state = State.STATE_UNSPECIFIED;

  constructor(data?: PartialMessage<Service>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1.Service";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "config", kind: "message", T: ServiceConfig },
    { no: 4, name: "state", kind: "enum", T: proto3.getEnumType(State) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Service {
    return new Service().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Service {
    return new Service().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Service {
    return new Service().fromJsonString(jsonString, options);
  }

  static equals(a: Service | PlainMessage<Service> | undefined, b: Service | PlainMessage<Service> | undefined): boolean {
    return proto3.util.equals(Service, a, b);
  }
}

/**
 * The configuration of the service.
 *
 * @generated from message google.api.serviceusage.v1.ServiceConfig
 */
export class ServiceConfig extends Message<ServiceConfig> {
  /**
   * The DNS address at which this service is available.
   *
   * An example DNS address would be:
   * `calendar.googleapis.com`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The product title for this service.
   *
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * A list of API interfaces exported by this service. Contains only the names,
   * versions, and method names of the interfaces.
   *
   * @generated from field: repeated google.protobuf.Api apis = 3;
   */
  apis: Api[] = [];

  /**
   * Additional API documentation. Contains only the summary and the
   * documentation URL.
   *
   * @generated from field: google.api.Documentation documentation = 6;
   */
  documentation?: Documentation;

  /**
   * Quota configuration.
   *
   * @generated from field: google.api.Quota quota = 10;
   */
  quota?: Quota;

  /**
   * Auth configuration. Contains only the OAuth rules.
   *
   * @generated from field: google.api.Authentication authentication = 11;
   */
  authentication?: Authentication;

  /**
   * Configuration controlling usage of this service.
   *
   * @generated from field: google.api.Usage usage = 15;
   */
  usage?: Usage;

  /**
   * Configuration for network endpoints. Contains only the names and aliases
   * of the endpoints.
   *
   * @generated from field: repeated google.api.Endpoint endpoints = 18;
   */
  endpoints: Endpoint[] = [];

  /**
   * Defines the monitored resources used by this service. This is required
   * by the [Service.monitoring][google.api.Service.monitoring] and [Service.logging][google.api.Service.logging] configurations.
   *
   * @generated from field: repeated google.api.MonitoredResourceDescriptor monitored_resources = 25;
   */
  monitoredResources: MonitoredResourceDescriptor[] = [];

  /**
   * Monitoring configuration.
   * This should not include the 'producer_destinations' field.
   *
   * @generated from field: google.api.Monitoring monitoring = 28;
   */
  monitoring?: Monitoring;

  constructor(data?: PartialMessage<ServiceConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1.ServiceConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "apis", kind: "message", T: Api, repeated: true },
    { no: 6, name: "documentation", kind: "message", T: Documentation },
    { no: 10, name: "quota", kind: "message", T: Quota },
    { no: 11, name: "authentication", kind: "message", T: Authentication },
    { no: 15, name: "usage", kind: "message", T: Usage },
    { no: 18, name: "endpoints", kind: "message", T: Endpoint, repeated: true },
    { no: 25, name: "monitored_resources", kind: "message", T: MonitoredResourceDescriptor, repeated: true },
    { no: 28, name: "monitoring", kind: "message", T: Monitoring },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServiceConfig {
    return new ServiceConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServiceConfig {
    return new ServiceConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServiceConfig {
    return new ServiceConfig().fromJsonString(jsonString, options);
  }

  static equals(a: ServiceConfig | PlainMessage<ServiceConfig> | undefined, b: ServiceConfig | PlainMessage<ServiceConfig> | undefined): boolean {
    return proto3.util.equals(ServiceConfig, a, b);
  }
}

/**
 * The operation metadata returned for the batchend services operation.
 *
 * @generated from message google.api.serviceusage.v1.OperationMetadata
 */
export class OperationMetadata extends Message<OperationMetadata> {
  /**
   * The full name of the resources that this operation is directly
   * associated with.
   *
   * @generated from field: repeated string resource_names = 2;
   */
  resourceNames: string[] = [];

  constructor(data?: PartialMessage<OperationMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1.OperationMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "resource_names", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperationMetadata {
    return new OperationMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperationMetadata {
    return new OperationMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperationMetadata {
    return new OperationMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: OperationMetadata | PlainMessage<OperationMetadata> | undefined, b: OperationMetadata | PlainMessage<OperationMetadata> | undefined): boolean {
    return proto3.util.equals(OperationMetadata, a, b);
  }
}

