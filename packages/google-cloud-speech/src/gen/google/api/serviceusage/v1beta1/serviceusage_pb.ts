// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file google/api/serviceusage/v1beta1/serviceusage.proto (package google.api.serviceusage.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { FieldMask, Message, proto3 } from "@bufbuild/protobuf";
import { AdminQuotaPolicy, ConsumerQuotaMetric, OverrideInlineSource, QuotaOverride, QuotaSafetyCheck, QuotaView, Service, ServiceIdentity } from "./resources_pb.js";

/**
 * Request message for the `EnableService` method.
 *
 * @generated from message google.api.serviceusage.v1beta1.EnableServiceRequest
 */
export class EnableServiceRequest extends Message<EnableServiceRequest> {
  /**
   * Name of the consumer and service to enable the service on.
   *
   * The `EnableService` and `DisableService` methods currently only support
   * projects.
   *
   * Enabling a service requires that the service is public or is shared with
   * the user enabling the service.
   *
   * An example name would be:
   * `projects/123/services/serviceusage.googleapis.com`
   * where `123` is the project number (not project ID).
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<EnableServiceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.EnableServiceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnableServiceRequest {
    return new EnableServiceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnableServiceRequest {
    return new EnableServiceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnableServiceRequest {
    return new EnableServiceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: EnableServiceRequest | PlainMessage<EnableServiceRequest> | undefined, b: EnableServiceRequest | PlainMessage<EnableServiceRequest> | undefined): boolean {
    return proto3.util.equals(EnableServiceRequest, a, b);
  }
}

/**
 * Request message for the `DisableService` method.
 *
 * @generated from message google.api.serviceusage.v1beta1.DisableServiceRequest
 */
export class DisableServiceRequest extends Message<DisableServiceRequest> {
  /**
   * Name of the consumer and service to disable the service on.
   *
   * The enable and disable methods currently only support projects.
   *
   * An example name would be:
   * `projects/123/services/serviceusage.googleapis.com`
   * where `123` is the project number (not project ID).
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DisableServiceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.DisableServiceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DisableServiceRequest {
    return new DisableServiceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DisableServiceRequest {
    return new DisableServiceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DisableServiceRequest {
    return new DisableServiceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DisableServiceRequest | PlainMessage<DisableServiceRequest> | undefined, b: DisableServiceRequest | PlainMessage<DisableServiceRequest> | undefined): boolean {
    return proto3.util.equals(DisableServiceRequest, a, b);
  }
}

/**
 * Request message for the `GetService` method.
 *
 * @generated from message google.api.serviceusage.v1beta1.GetServiceRequest
 */
export class GetServiceRequest extends Message<GetServiceRequest> {
  /**
   * Name of the consumer and service to get the `ConsumerState` for.
   *
   * An example name would be:
   * `projects/123/services/serviceusage.googleapis.com`
   * where `123` is the project number (not project ID).
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetServiceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.GetServiceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetServiceRequest {
    return new GetServiceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetServiceRequest {
    return new GetServiceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetServiceRequest {
    return new GetServiceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetServiceRequest | PlainMessage<GetServiceRequest> | undefined, b: GetServiceRequest | PlainMessage<GetServiceRequest> | undefined): boolean {
    return proto3.util.equals(GetServiceRequest, a, b);
  }
}

/**
 * Request message for the `ListServices` method.
 *
 * @generated from message google.api.serviceusage.v1beta1.ListServicesRequest
 */
export class ListServicesRequest extends Message<ListServicesRequest> {
  /**
   * Parent to search for services on.
   *
   * An example name would be:
   * `projects/123`
   * where `123` is the project number (not project ID).
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * Requested size of the next page of data.
   * Requested page size cannot exceed 200.
   *  If not set, the default page size is 50.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * Token identifying which result to start with, which is returned by a
   * previous list call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  /**
   * Only list services that conform to the given filter.
   * The allowed filter strings are `state:ENABLED` and `state:DISABLED`.
   *
   * @generated from field: string filter = 4;
   */
  filter = "";

  constructor(data?: PartialMessage<ListServicesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.ListServicesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListServicesRequest {
    return new ListServicesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListServicesRequest {
    return new ListServicesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListServicesRequest {
    return new ListServicesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListServicesRequest | PlainMessage<ListServicesRequest> | undefined, b: ListServicesRequest | PlainMessage<ListServicesRequest> | undefined): boolean {
    return proto3.util.equals(ListServicesRequest, a, b);
  }
}

/**
 * Response message for the `ListServices` method.
 *
 * @generated from message google.api.serviceusage.v1beta1.ListServicesResponse
 */
export class ListServicesResponse extends Message<ListServicesResponse> {
  /**
   * The available services for the requested project.
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.Service services = 1;
   */
  services: Service[] = [];

  /**
   * Token that can be passed to `ListServices` to resume a paginated
   * query.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListServicesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.ListServicesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "services", kind: "message", T: Service, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListServicesResponse {
    return new ListServicesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListServicesResponse {
    return new ListServicesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListServicesResponse {
    return new ListServicesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListServicesResponse | PlainMessage<ListServicesResponse> | undefined, b: ListServicesResponse | PlainMessage<ListServicesResponse> | undefined): boolean {
    return proto3.util.equals(ListServicesResponse, a, b);
  }
}

/**
 * Request message for the `BatchEnableServices` method.
 *
 * @generated from message google.api.serviceusage.v1beta1.BatchEnableServicesRequest
 */
export class BatchEnableServicesRequest extends Message<BatchEnableServicesRequest> {
  /**
   * Parent to enable services on.
   *
   * An example name would be:
   * `projects/123`
   * where `123` is the project number (not project ID).
   *
   * The `BatchEnableServices` method currently only supports projects.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The identifiers of the services to enable on the project.
   *
   * A valid identifier would be:
   * serviceusage.googleapis.com
   *
   * Enabling services requires that each service is public or is shared with
   * the user enabling the service.
   *
   * Two or more services must be specified. To enable a single service,
   * use the `EnableService` method instead.
   *
   * A single request can enable a maximum of 20 services at a time. If more
   * than 20 services are specified, the request will fail, and no state changes
   * will occur.
   *
   * @generated from field: repeated string service_ids = 2;
   */
  serviceIds: string[] = [];

  constructor(data?: PartialMessage<BatchEnableServicesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.BatchEnableServicesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "service_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BatchEnableServicesRequest {
    return new BatchEnableServicesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BatchEnableServicesRequest {
    return new BatchEnableServicesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BatchEnableServicesRequest {
    return new BatchEnableServicesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: BatchEnableServicesRequest | PlainMessage<BatchEnableServicesRequest> | undefined, b: BatchEnableServicesRequest | PlainMessage<BatchEnableServicesRequest> | undefined): boolean {
    return proto3.util.equals(BatchEnableServicesRequest, a, b);
  }
}

/**
 * Request message for ListConsumerQuotaMetrics
 *
 * @generated from message google.api.serviceusage.v1beta1.ListConsumerQuotaMetricsRequest
 */
export class ListConsumerQuotaMetricsRequest extends Message<ListConsumerQuotaMetricsRequest> {
  /**
   * Parent of the quotas resource.
   *
   * Some example names would be:
   * `projects/123/services/serviceconsumermanagement.googleapis.com`
   * `folders/345/services/serviceconsumermanagement.googleapis.com`
   * `organizations/456/services/serviceconsumermanagement.googleapis.com`
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * Requested size of the next page of data.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * Token identifying which result to start with; returned by a previous list
   * call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  /**
   * Specifies the level of detail for quota information in the response.
   *
   * @generated from field: google.api.serviceusage.v1beta1.QuotaView view = 4;
   */
  view = QuotaView.QUOTA_VIEW_UNSPECIFIED;

  constructor(data?: PartialMessage<ListConsumerQuotaMetricsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.ListConsumerQuotaMetricsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "view", kind: "enum", T: proto3.getEnumType(QuotaView) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListConsumerQuotaMetricsRequest {
    return new ListConsumerQuotaMetricsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListConsumerQuotaMetricsRequest {
    return new ListConsumerQuotaMetricsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListConsumerQuotaMetricsRequest {
    return new ListConsumerQuotaMetricsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListConsumerQuotaMetricsRequest | PlainMessage<ListConsumerQuotaMetricsRequest> | undefined, b: ListConsumerQuotaMetricsRequest | PlainMessage<ListConsumerQuotaMetricsRequest> | undefined): boolean {
    return proto3.util.equals(ListConsumerQuotaMetricsRequest, a, b);
  }
}

/**
 * Response message for ListConsumerQuotaMetrics
 *
 * @generated from message google.api.serviceusage.v1beta1.ListConsumerQuotaMetricsResponse
 */
export class ListConsumerQuotaMetricsResponse extends Message<ListConsumerQuotaMetricsResponse> {
  /**
   * Quota settings for the consumer, organized by quota metric.
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.ConsumerQuotaMetric metrics = 1;
   */
  metrics: ConsumerQuotaMetric[] = [];

  /**
   * Token identifying which result to start with; returned by a previous list
   * call.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListConsumerQuotaMetricsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.ListConsumerQuotaMetricsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "metrics", kind: "message", T: ConsumerQuotaMetric, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListConsumerQuotaMetricsResponse {
    return new ListConsumerQuotaMetricsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListConsumerQuotaMetricsResponse {
    return new ListConsumerQuotaMetricsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListConsumerQuotaMetricsResponse {
    return new ListConsumerQuotaMetricsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListConsumerQuotaMetricsResponse | PlainMessage<ListConsumerQuotaMetricsResponse> | undefined, b: ListConsumerQuotaMetricsResponse | PlainMessage<ListConsumerQuotaMetricsResponse> | undefined): boolean {
    return proto3.util.equals(ListConsumerQuotaMetricsResponse, a, b);
  }
}

/**
 * Request message for GetConsumerQuotaMetric
 *
 * @generated from message google.api.serviceusage.v1beta1.GetConsumerQuotaMetricRequest
 */
export class GetConsumerQuotaMetricRequest extends Message<GetConsumerQuotaMetricRequest> {
  /**
   * The resource name of the quota limit.
   *
   * An example name would be:
   * `projects/123/services/serviceusage.googleapis.com/quotas/metrics/serviceusage.googleapis.com%2Fmutate_requests`
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Specifies the level of detail for quota information in the response.
   *
   * @generated from field: google.api.serviceusage.v1beta1.QuotaView view = 2;
   */
  view = QuotaView.QUOTA_VIEW_UNSPECIFIED;

  constructor(data?: PartialMessage<GetConsumerQuotaMetricRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.GetConsumerQuotaMetricRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "view", kind: "enum", T: proto3.getEnumType(QuotaView) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConsumerQuotaMetricRequest {
    return new GetConsumerQuotaMetricRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConsumerQuotaMetricRequest {
    return new GetConsumerQuotaMetricRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConsumerQuotaMetricRequest {
    return new GetConsumerQuotaMetricRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetConsumerQuotaMetricRequest | PlainMessage<GetConsumerQuotaMetricRequest> | undefined, b: GetConsumerQuotaMetricRequest | PlainMessage<GetConsumerQuotaMetricRequest> | undefined): boolean {
    return proto3.util.equals(GetConsumerQuotaMetricRequest, a, b);
  }
}

/**
 * Request message for GetConsumerQuotaLimit
 *
 * @generated from message google.api.serviceusage.v1beta1.GetConsumerQuotaLimitRequest
 */
export class GetConsumerQuotaLimitRequest extends Message<GetConsumerQuotaLimitRequest> {
  /**
   * The resource name of the quota limit.
   *
   * Use the quota limit resource name returned by previous
   * ListConsumerQuotaMetrics and GetConsumerQuotaMetric API calls.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Specifies the level of detail for quota information in the response.
   *
   * @generated from field: google.api.serviceusage.v1beta1.QuotaView view = 2;
   */
  view = QuotaView.QUOTA_VIEW_UNSPECIFIED;

  constructor(data?: PartialMessage<GetConsumerQuotaLimitRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.GetConsumerQuotaLimitRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "view", kind: "enum", T: proto3.getEnumType(QuotaView) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConsumerQuotaLimitRequest {
    return new GetConsumerQuotaLimitRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConsumerQuotaLimitRequest {
    return new GetConsumerQuotaLimitRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConsumerQuotaLimitRequest {
    return new GetConsumerQuotaLimitRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetConsumerQuotaLimitRequest | PlainMessage<GetConsumerQuotaLimitRequest> | undefined, b: GetConsumerQuotaLimitRequest | PlainMessage<GetConsumerQuotaLimitRequest> | undefined): boolean {
    return proto3.util.equals(GetConsumerQuotaLimitRequest, a, b);
  }
}

/**
 * Request message for CreateAdminOverride.
 *
 * @generated from message google.api.serviceusage.v1beta1.CreateAdminOverrideRequest
 */
export class CreateAdminOverrideRequest extends Message<CreateAdminOverrideRequest> {
  /**
   * The resource name of the parent quota limit, returned by a
   * ListConsumerQuotaMetrics or GetConsumerQuotaMetric call.
   *
   * An example name would be:
   * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The admin override to create.
   *
   * @generated from field: google.api.serviceusage.v1beta1.QuotaOverride override = 2;
   */
  override?: QuotaOverride;

  /**
   * Whether to force the creation of the quota override.
   * Setting the force parameter to 'true' ignores all quota safety checks that
   * would fail the request. QuotaSafetyCheck lists all such validations.
   *
   * @generated from field: bool force = 3;
   */
  force = false;

  /**
   * The list of quota safety checks to ignore before the override mutation.
   * Unlike 'force' field that ignores all the quota safety checks, the
   * 'force_only' field ignores only the specified checks; other checks are
   * still enforced. The 'force' and 'force_only' fields cannot both be set.
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 4;
   */
  forceOnly: QuotaSafetyCheck[] = [];

  constructor(data?: PartialMessage<CreateAdminOverrideRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.CreateAdminOverrideRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "override", kind: "message", T: QuotaOverride },
    { no: 3, name: "force", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "force_only", kind: "enum", T: proto3.getEnumType(QuotaSafetyCheck), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAdminOverrideRequest {
    return new CreateAdminOverrideRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAdminOverrideRequest {
    return new CreateAdminOverrideRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAdminOverrideRequest {
    return new CreateAdminOverrideRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateAdminOverrideRequest | PlainMessage<CreateAdminOverrideRequest> | undefined, b: CreateAdminOverrideRequest | PlainMessage<CreateAdminOverrideRequest> | undefined): boolean {
    return proto3.util.equals(CreateAdminOverrideRequest, a, b);
  }
}

/**
 * Request message for UpdateAdminOverride.
 *
 * @generated from message google.api.serviceusage.v1beta1.UpdateAdminOverrideRequest
 */
export class UpdateAdminOverrideRequest extends Message<UpdateAdminOverrideRequest> {
  /**
   * The resource name of the override to update.
   *
   * An example name would be:
   * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/adminOverrides/4a3f2c1d`
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The new override.
   * Only the override_value is updated; all other fields are ignored.
   *
   * @generated from field: google.api.serviceusage.v1beta1.QuotaOverride override = 2;
   */
  override?: QuotaOverride;

  /**
   * Whether to force the update of the quota override.
   * Setting the force parameter to 'true' ignores all quota safety checks that
   * would fail the request. QuotaSafetyCheck lists all such validations.
   *
   * @generated from field: bool force = 3;
   */
  force = false;

  /**
   * Update only the specified fields of the override.
   * If unset, all fields will be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 4;
   */
  updateMask?: FieldMask;

  /**
   * The list of quota safety checks to ignore before the override mutation.
   * Unlike 'force' field that ignores all the quota safety checks, the
   * 'force_only' field ignores only the specified checks; other checks are
   * still enforced. The 'force' and 'force_only' fields cannot both be set.
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 5;
   */
  forceOnly: QuotaSafetyCheck[] = [];

  constructor(data?: PartialMessage<UpdateAdminOverrideRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.UpdateAdminOverrideRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "override", kind: "message", T: QuotaOverride },
    { no: 3, name: "force", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "update_mask", kind: "message", T: FieldMask },
    { no: 5, name: "force_only", kind: "enum", T: proto3.getEnumType(QuotaSafetyCheck), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAdminOverrideRequest {
    return new UpdateAdminOverrideRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAdminOverrideRequest {
    return new UpdateAdminOverrideRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAdminOverrideRequest {
    return new UpdateAdminOverrideRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAdminOverrideRequest | PlainMessage<UpdateAdminOverrideRequest> | undefined, b: UpdateAdminOverrideRequest | PlainMessage<UpdateAdminOverrideRequest> | undefined): boolean {
    return proto3.util.equals(UpdateAdminOverrideRequest, a, b);
  }
}

/**
 * Request message for DeleteAdminOverride.
 *
 * @generated from message google.api.serviceusage.v1beta1.DeleteAdminOverrideRequest
 */
export class DeleteAdminOverrideRequest extends Message<DeleteAdminOverrideRequest> {
  /**
   * The resource name of the override to delete.
   *
   * An example name would be:
   * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/adminOverrides/4a3f2c1d`
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Whether to force the deletion of the quota override.
   * Setting the force parameter to 'true' ignores all quota safety checks that
   * would fail the request. QuotaSafetyCheck lists all such validations.
   *
   * @generated from field: bool force = 2;
   */
  force = false;

  /**
   * The list of quota safety checks to ignore before the override mutation.
   * Unlike 'force' field that ignores all the quota safety checks, the
   * 'force_only' field ignores only the specified checks; other checks are
   * still enforced. The 'force' and 'force_only' fields cannot both be set.
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 3;
   */
  forceOnly: QuotaSafetyCheck[] = [];

  constructor(data?: PartialMessage<DeleteAdminOverrideRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.DeleteAdminOverrideRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "force", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "force_only", kind: "enum", T: proto3.getEnumType(QuotaSafetyCheck), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAdminOverrideRequest {
    return new DeleteAdminOverrideRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAdminOverrideRequest {
    return new DeleteAdminOverrideRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAdminOverrideRequest {
    return new DeleteAdminOverrideRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteAdminOverrideRequest | PlainMessage<DeleteAdminOverrideRequest> | undefined, b: DeleteAdminOverrideRequest | PlainMessage<DeleteAdminOverrideRequest> | undefined): boolean {
    return proto3.util.equals(DeleteAdminOverrideRequest, a, b);
  }
}

/**
 * Request message for ListAdminOverrides
 *
 * @generated from message google.api.serviceusage.v1beta1.ListAdminOverridesRequest
 */
export class ListAdminOverridesRequest extends Message<ListAdminOverridesRequest> {
  /**
   * The resource name of the parent quota limit, returned by a
   * ListConsumerQuotaMetrics or GetConsumerQuotaMetric call.
   *
   * An example name would be:
   * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * Requested size of the next page of data.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * Token identifying which result to start with; returned by a previous list
   * call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  constructor(data?: PartialMessage<ListAdminOverridesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.ListAdminOverridesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAdminOverridesRequest {
    return new ListAdminOverridesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAdminOverridesRequest {
    return new ListAdminOverridesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAdminOverridesRequest {
    return new ListAdminOverridesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListAdminOverridesRequest | PlainMessage<ListAdminOverridesRequest> | undefined, b: ListAdminOverridesRequest | PlainMessage<ListAdminOverridesRequest> | undefined): boolean {
    return proto3.util.equals(ListAdminOverridesRequest, a, b);
  }
}

/**
 * Response message for ListAdminOverrides.
 *
 * @generated from message google.api.serviceusage.v1beta1.ListAdminOverridesResponse
 */
export class ListAdminOverridesResponse extends Message<ListAdminOverridesResponse> {
  /**
   * Admin overrides on this limit.
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.QuotaOverride overrides = 1;
   */
  overrides: QuotaOverride[] = [];

  /**
   * Token identifying which result to start with; returned by a previous list
   * call.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListAdminOverridesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.ListAdminOverridesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "overrides", kind: "message", T: QuotaOverride, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAdminOverridesResponse {
    return new ListAdminOverridesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAdminOverridesResponse {
    return new ListAdminOverridesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAdminOverridesResponse {
    return new ListAdminOverridesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListAdminOverridesResponse | PlainMessage<ListAdminOverridesResponse> | undefined, b: ListAdminOverridesResponse | PlainMessage<ListAdminOverridesResponse> | undefined): boolean {
    return proto3.util.equals(ListAdminOverridesResponse, a, b);
  }
}

/**
 * Response message for BatchCreateAdminOverrides
 *
 * @generated from message google.api.serviceusage.v1beta1.BatchCreateAdminOverridesResponse
 */
export class BatchCreateAdminOverridesResponse extends Message<BatchCreateAdminOverridesResponse> {
  /**
   * The overrides that were created.
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.QuotaOverride overrides = 1;
   */
  overrides: QuotaOverride[] = [];

  constructor(data?: PartialMessage<BatchCreateAdminOverridesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.BatchCreateAdminOverridesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "overrides", kind: "message", T: QuotaOverride, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BatchCreateAdminOverridesResponse {
    return new BatchCreateAdminOverridesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BatchCreateAdminOverridesResponse {
    return new BatchCreateAdminOverridesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BatchCreateAdminOverridesResponse {
    return new BatchCreateAdminOverridesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BatchCreateAdminOverridesResponse | PlainMessage<BatchCreateAdminOverridesResponse> | undefined, b: BatchCreateAdminOverridesResponse | PlainMessage<BatchCreateAdminOverridesResponse> | undefined): boolean {
    return proto3.util.equals(BatchCreateAdminOverridesResponse, a, b);
  }
}

/**
 * Request message for ImportAdminOverrides
 *
 * @generated from message google.api.serviceusage.v1beta1.ImportAdminOverridesRequest
 */
export class ImportAdminOverridesRequest extends Message<ImportAdminOverridesRequest> {
  /**
   * The resource name of the consumer.
   *
   * An example name would be:
   * `projects/123/services/compute.googleapis.com`
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * Source of import data
   *
   * @generated from oneof google.api.serviceusage.v1beta1.ImportAdminOverridesRequest.source
   */
  source: {
    /**
     * The import data is specified in the request message itself
     *
     * @generated from field: google.api.serviceusage.v1beta1.OverrideInlineSource inline_source = 2;
     */
    value: OverrideInlineSource;
    case: "inlineSource";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * Whether to force the creation of the quota overrides.
   * Setting the force parameter to 'true' ignores all quota safety checks that
   * would fail the request. QuotaSafetyCheck lists all such validations.
   *
   * @generated from field: bool force = 3;
   */
  force = false;

  /**
   * The list of quota safety checks to ignore before the override mutation.
   * Unlike 'force' field that ignores all the quota safety checks, the
   * 'force_only' field ignores only the specified checks; other checks are
   * still enforced. The 'force' and 'force_only' fields cannot both be set.
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 4;
   */
  forceOnly: QuotaSafetyCheck[] = [];

  constructor(data?: PartialMessage<ImportAdminOverridesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.ImportAdminOverridesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "inline_source", kind: "message", T: OverrideInlineSource, oneof: "source" },
    { no: 3, name: "force", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "force_only", kind: "enum", T: proto3.getEnumType(QuotaSafetyCheck), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportAdminOverridesRequest {
    return new ImportAdminOverridesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportAdminOverridesRequest {
    return new ImportAdminOverridesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportAdminOverridesRequest {
    return new ImportAdminOverridesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ImportAdminOverridesRequest | PlainMessage<ImportAdminOverridesRequest> | undefined, b: ImportAdminOverridesRequest | PlainMessage<ImportAdminOverridesRequest> | undefined): boolean {
    return proto3.util.equals(ImportAdminOverridesRequest, a, b);
  }
}

/**
 * Response message for ImportAdminOverrides
 *
 * @generated from message google.api.serviceusage.v1beta1.ImportAdminOverridesResponse
 */
export class ImportAdminOverridesResponse extends Message<ImportAdminOverridesResponse> {
  /**
   * The overrides that were created from the imported data.
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.QuotaOverride overrides = 1;
   */
  overrides: QuotaOverride[] = [];

  constructor(data?: PartialMessage<ImportAdminOverridesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.ImportAdminOverridesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "overrides", kind: "message", T: QuotaOverride, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportAdminOverridesResponse {
    return new ImportAdminOverridesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportAdminOverridesResponse {
    return new ImportAdminOverridesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportAdminOverridesResponse {
    return new ImportAdminOverridesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ImportAdminOverridesResponse | PlainMessage<ImportAdminOverridesResponse> | undefined, b: ImportAdminOverridesResponse | PlainMessage<ImportAdminOverridesResponse> | undefined): boolean {
    return proto3.util.equals(ImportAdminOverridesResponse, a, b);
  }
}

/**
 * Metadata message that provides information such as progress,
 * partial failures, and similar information on each GetOperation call
 * of LRO returned by ImportAdminOverrides.
 *
 * @generated from message google.api.serviceusage.v1beta1.ImportAdminOverridesMetadata
 */
export class ImportAdminOverridesMetadata extends Message<ImportAdminOverridesMetadata> {
  constructor(data?: PartialMessage<ImportAdminOverridesMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.ImportAdminOverridesMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportAdminOverridesMetadata {
    return new ImportAdminOverridesMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportAdminOverridesMetadata {
    return new ImportAdminOverridesMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportAdminOverridesMetadata {
    return new ImportAdminOverridesMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: ImportAdminOverridesMetadata | PlainMessage<ImportAdminOverridesMetadata> | undefined, b: ImportAdminOverridesMetadata | PlainMessage<ImportAdminOverridesMetadata> | undefined): boolean {
    return proto3.util.equals(ImportAdminOverridesMetadata, a, b);
  }
}

/**
 * Request message for CreateConsumerOverride.
 *
 * @generated from message google.api.serviceusage.v1beta1.CreateConsumerOverrideRequest
 */
export class CreateConsumerOverrideRequest extends Message<CreateConsumerOverrideRequest> {
  /**
   * The resource name of the parent quota limit, returned by a
   * ListConsumerQuotaMetrics or GetConsumerQuotaMetric call.
   *
   * An example name would be:
   * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The override to create.
   *
   * @generated from field: google.api.serviceusage.v1beta1.QuotaOverride override = 2;
   */
  override?: QuotaOverride;

  /**
   * Whether to force the creation of the quota override.
   * Setting the force parameter to 'true' ignores all quota safety checks that
   * would fail the request. QuotaSafetyCheck lists all such validations.
   *
   * @generated from field: bool force = 3;
   */
  force = false;

  /**
   * The list of quota safety checks to ignore before the override mutation.
   * Unlike 'force' field that ignores all the quota safety checks, the
   * 'force_only' field ignores only the specified checks; other checks are
   * still enforced. The 'force' and 'force_only' fields cannot both be set.
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 4;
   */
  forceOnly: QuotaSafetyCheck[] = [];

  constructor(data?: PartialMessage<CreateConsumerOverrideRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.CreateConsumerOverrideRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "override", kind: "message", T: QuotaOverride },
    { no: 3, name: "force", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "force_only", kind: "enum", T: proto3.getEnumType(QuotaSafetyCheck), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateConsumerOverrideRequest {
    return new CreateConsumerOverrideRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateConsumerOverrideRequest {
    return new CreateConsumerOverrideRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateConsumerOverrideRequest {
    return new CreateConsumerOverrideRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateConsumerOverrideRequest | PlainMessage<CreateConsumerOverrideRequest> | undefined, b: CreateConsumerOverrideRequest | PlainMessage<CreateConsumerOverrideRequest> | undefined): boolean {
    return proto3.util.equals(CreateConsumerOverrideRequest, a, b);
  }
}

/**
 * Request message for UpdateConsumerOverride.
 *
 * @generated from message google.api.serviceusage.v1beta1.UpdateConsumerOverrideRequest
 */
export class UpdateConsumerOverrideRequest extends Message<UpdateConsumerOverrideRequest> {
  /**
   * The resource name of the override to update.
   *
   * An example name would be:
   * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/consumerOverrides/4a3f2c1d`
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The new override.
   * Only the override_value is updated; all other fields are ignored.
   *
   * @generated from field: google.api.serviceusage.v1beta1.QuotaOverride override = 2;
   */
  override?: QuotaOverride;

  /**
   * Whether to force the update of the quota override.
   * Setting the force parameter to 'true' ignores all quota safety checks that
   * would fail the request. QuotaSafetyCheck lists all such validations.
   *
   * @generated from field: bool force = 3;
   */
  force = false;

  /**
   * Update only the specified fields of the override.
   * If unset, all fields will be updated.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 4;
   */
  updateMask?: FieldMask;

  /**
   * The list of quota safety checks to ignore before the override mutation.
   * Unlike 'force' field that ignores all the quota safety checks, the
   * 'force_only' field ignores only the specified checks; other checks are
   * still enforced. The 'force' and 'force_only' fields cannot both be set.
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 5;
   */
  forceOnly: QuotaSafetyCheck[] = [];

  constructor(data?: PartialMessage<UpdateConsumerOverrideRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.UpdateConsumerOverrideRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "override", kind: "message", T: QuotaOverride },
    { no: 3, name: "force", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "update_mask", kind: "message", T: FieldMask },
    { no: 5, name: "force_only", kind: "enum", T: proto3.getEnumType(QuotaSafetyCheck), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateConsumerOverrideRequest {
    return new UpdateConsumerOverrideRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateConsumerOverrideRequest {
    return new UpdateConsumerOverrideRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateConsumerOverrideRequest {
    return new UpdateConsumerOverrideRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateConsumerOverrideRequest | PlainMessage<UpdateConsumerOverrideRequest> | undefined, b: UpdateConsumerOverrideRequest | PlainMessage<UpdateConsumerOverrideRequest> | undefined): boolean {
    return proto3.util.equals(UpdateConsumerOverrideRequest, a, b);
  }
}

/**
 * Request message for DeleteConsumerOverride.
 *
 * @generated from message google.api.serviceusage.v1beta1.DeleteConsumerOverrideRequest
 */
export class DeleteConsumerOverrideRequest extends Message<DeleteConsumerOverrideRequest> {
  /**
   * The resource name of the override to delete.
   *
   * An example name would be:
   * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/consumerOverrides/4a3f2c1d`
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Whether to force the deletion of the quota override.
   * Setting the force parameter to 'true' ignores all quota safety checks that
   * would fail the request. QuotaSafetyCheck lists all such validations.
   *
   * @generated from field: bool force = 2;
   */
  force = false;

  /**
   * The list of quota safety checks to ignore before the override mutation.
   * Unlike 'force' field that ignores all the quota safety checks, the
   * 'force_only' field ignores only the specified checks; other checks are
   * still enforced. The 'force' and 'force_only' fields cannot both be set.
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 3;
   */
  forceOnly: QuotaSafetyCheck[] = [];

  constructor(data?: PartialMessage<DeleteConsumerOverrideRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.DeleteConsumerOverrideRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "force", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "force_only", kind: "enum", T: proto3.getEnumType(QuotaSafetyCheck), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteConsumerOverrideRequest {
    return new DeleteConsumerOverrideRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteConsumerOverrideRequest {
    return new DeleteConsumerOverrideRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteConsumerOverrideRequest {
    return new DeleteConsumerOverrideRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteConsumerOverrideRequest | PlainMessage<DeleteConsumerOverrideRequest> | undefined, b: DeleteConsumerOverrideRequest | PlainMessage<DeleteConsumerOverrideRequest> | undefined): boolean {
    return proto3.util.equals(DeleteConsumerOverrideRequest, a, b);
  }
}

/**
 * Request message for ListConsumerOverrides
 *
 * @generated from message google.api.serviceusage.v1beta1.ListConsumerOverridesRequest
 */
export class ListConsumerOverridesRequest extends Message<ListConsumerOverridesRequest> {
  /**
   * The resource name of the parent quota limit, returned by a
   * ListConsumerQuotaMetrics or GetConsumerQuotaMetric call.
   *
   * An example name would be:
   * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * Requested size of the next page of data.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * Token identifying which result to start with; returned by a previous list
   * call.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  constructor(data?: PartialMessage<ListConsumerOverridesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.ListConsumerOverridesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListConsumerOverridesRequest {
    return new ListConsumerOverridesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListConsumerOverridesRequest {
    return new ListConsumerOverridesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListConsumerOverridesRequest {
    return new ListConsumerOverridesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListConsumerOverridesRequest | PlainMessage<ListConsumerOverridesRequest> | undefined, b: ListConsumerOverridesRequest | PlainMessage<ListConsumerOverridesRequest> | undefined): boolean {
    return proto3.util.equals(ListConsumerOverridesRequest, a, b);
  }
}

/**
 * Response message for ListConsumerOverrides.
 *
 * @generated from message google.api.serviceusage.v1beta1.ListConsumerOverridesResponse
 */
export class ListConsumerOverridesResponse extends Message<ListConsumerOverridesResponse> {
  /**
   * Consumer overrides on this limit.
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.QuotaOverride overrides = 1;
   */
  overrides: QuotaOverride[] = [];

  /**
   * Token identifying which result to start with; returned by a previous list
   * call.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListConsumerOverridesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.ListConsumerOverridesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "overrides", kind: "message", T: QuotaOverride, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListConsumerOverridesResponse {
    return new ListConsumerOverridesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListConsumerOverridesResponse {
    return new ListConsumerOverridesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListConsumerOverridesResponse {
    return new ListConsumerOverridesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListConsumerOverridesResponse | PlainMessage<ListConsumerOverridesResponse> | undefined, b: ListConsumerOverridesResponse | PlainMessage<ListConsumerOverridesResponse> | undefined): boolean {
    return proto3.util.equals(ListConsumerOverridesResponse, a, b);
  }
}

/**
 * Response message for BatchCreateConsumerOverrides
 *
 * @generated from message google.api.serviceusage.v1beta1.BatchCreateConsumerOverridesResponse
 */
export class BatchCreateConsumerOverridesResponse extends Message<BatchCreateConsumerOverridesResponse> {
  /**
   * The overrides that were created.
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.QuotaOverride overrides = 1;
   */
  overrides: QuotaOverride[] = [];

  constructor(data?: PartialMessage<BatchCreateConsumerOverridesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.BatchCreateConsumerOverridesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "overrides", kind: "message", T: QuotaOverride, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BatchCreateConsumerOverridesResponse {
    return new BatchCreateConsumerOverridesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BatchCreateConsumerOverridesResponse {
    return new BatchCreateConsumerOverridesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BatchCreateConsumerOverridesResponse {
    return new BatchCreateConsumerOverridesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BatchCreateConsumerOverridesResponse | PlainMessage<BatchCreateConsumerOverridesResponse> | undefined, b: BatchCreateConsumerOverridesResponse | PlainMessage<BatchCreateConsumerOverridesResponse> | undefined): boolean {
    return proto3.util.equals(BatchCreateConsumerOverridesResponse, a, b);
  }
}

/**
 * Request message for ImportConsumerOverrides
 *
 * @generated from message google.api.serviceusage.v1beta1.ImportConsumerOverridesRequest
 */
export class ImportConsumerOverridesRequest extends Message<ImportConsumerOverridesRequest> {
  /**
   * The resource name of the consumer.
   *
   * An example name would be:
   * `projects/123/services/compute.googleapis.com`
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * Source of import data
   *
   * @generated from oneof google.api.serviceusage.v1beta1.ImportConsumerOverridesRequest.source
   */
  source: {
    /**
     * The import data is specified in the request message itself
     *
     * @generated from field: google.api.serviceusage.v1beta1.OverrideInlineSource inline_source = 2;
     */
    value: OverrideInlineSource;
    case: "inlineSource";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * Whether to force the creation of the quota overrides.
   * Setting the force parameter to 'true' ignores all quota safety checks that
   * would fail the request. QuotaSafetyCheck lists all such validations.
   *
   * @generated from field: bool force = 3;
   */
  force = false;

  /**
   * The list of quota safety checks to ignore before the override mutation.
   * Unlike 'force' field that ignores all the quota safety checks, the
   * 'force_only' field ignores only the specified checks; other checks are
   * still enforced. The 'force' and 'force_only' fields cannot both be set.
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 4;
   */
  forceOnly: QuotaSafetyCheck[] = [];

  constructor(data?: PartialMessage<ImportConsumerOverridesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.ImportConsumerOverridesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "inline_source", kind: "message", T: OverrideInlineSource, oneof: "source" },
    { no: 3, name: "force", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "force_only", kind: "enum", T: proto3.getEnumType(QuotaSafetyCheck), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportConsumerOverridesRequest {
    return new ImportConsumerOverridesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportConsumerOverridesRequest {
    return new ImportConsumerOverridesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportConsumerOverridesRequest {
    return new ImportConsumerOverridesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ImportConsumerOverridesRequest | PlainMessage<ImportConsumerOverridesRequest> | undefined, b: ImportConsumerOverridesRequest | PlainMessage<ImportConsumerOverridesRequest> | undefined): boolean {
    return proto3.util.equals(ImportConsumerOverridesRequest, a, b);
  }
}

/**
 * Response message for ImportConsumerOverrides
 *
 * @generated from message google.api.serviceusage.v1beta1.ImportConsumerOverridesResponse
 */
export class ImportConsumerOverridesResponse extends Message<ImportConsumerOverridesResponse> {
  /**
   * The overrides that were created from the imported data.
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.QuotaOverride overrides = 1;
   */
  overrides: QuotaOverride[] = [];

  constructor(data?: PartialMessage<ImportConsumerOverridesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.ImportConsumerOverridesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "overrides", kind: "message", T: QuotaOverride, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportConsumerOverridesResponse {
    return new ImportConsumerOverridesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportConsumerOverridesResponse {
    return new ImportConsumerOverridesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportConsumerOverridesResponse {
    return new ImportConsumerOverridesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ImportConsumerOverridesResponse | PlainMessage<ImportConsumerOverridesResponse> | undefined, b: ImportConsumerOverridesResponse | PlainMessage<ImportConsumerOverridesResponse> | undefined): boolean {
    return proto3.util.equals(ImportConsumerOverridesResponse, a, b);
  }
}

/**
 * Metadata message that provides information such as progress,
 * partial failures, and similar information on each GetOperation call
 * of LRO returned by ImportConsumerOverrides.
 *
 * @generated from message google.api.serviceusage.v1beta1.ImportConsumerOverridesMetadata
 */
export class ImportConsumerOverridesMetadata extends Message<ImportConsumerOverridesMetadata> {
  constructor(data?: PartialMessage<ImportConsumerOverridesMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.ImportConsumerOverridesMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportConsumerOverridesMetadata {
    return new ImportConsumerOverridesMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportConsumerOverridesMetadata {
    return new ImportConsumerOverridesMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportConsumerOverridesMetadata {
    return new ImportConsumerOverridesMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: ImportConsumerOverridesMetadata | PlainMessage<ImportConsumerOverridesMetadata> | undefined, b: ImportConsumerOverridesMetadata | PlainMessage<ImportConsumerOverridesMetadata> | undefined): boolean {
    return proto3.util.equals(ImportConsumerOverridesMetadata, a, b);
  }
}

/**
 * Response message for ImportAdminQuotaPolicies
 *
 * @generated from message google.api.serviceusage.v1beta1.ImportAdminQuotaPoliciesResponse
 */
export class ImportAdminQuotaPoliciesResponse extends Message<ImportAdminQuotaPoliciesResponse> {
  /**
   * The policies that were created from the imported data.
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.AdminQuotaPolicy policies = 1;
   */
  policies: AdminQuotaPolicy[] = [];

  constructor(data?: PartialMessage<ImportAdminQuotaPoliciesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.ImportAdminQuotaPoliciesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "policies", kind: "message", T: AdminQuotaPolicy, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportAdminQuotaPoliciesResponse {
    return new ImportAdminQuotaPoliciesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportAdminQuotaPoliciesResponse {
    return new ImportAdminQuotaPoliciesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportAdminQuotaPoliciesResponse {
    return new ImportAdminQuotaPoliciesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ImportAdminQuotaPoliciesResponse | PlainMessage<ImportAdminQuotaPoliciesResponse> | undefined, b: ImportAdminQuotaPoliciesResponse | PlainMessage<ImportAdminQuotaPoliciesResponse> | undefined): boolean {
    return proto3.util.equals(ImportAdminQuotaPoliciesResponse, a, b);
  }
}

/**
 * Metadata message that provides information such as progress,
 * partial failures, and similar information on each GetOperation call
 * of LRO returned by ImportAdminQuotaPolicies.
 *
 * @generated from message google.api.serviceusage.v1beta1.ImportAdminQuotaPoliciesMetadata
 */
export class ImportAdminQuotaPoliciesMetadata extends Message<ImportAdminQuotaPoliciesMetadata> {
  constructor(data?: PartialMessage<ImportAdminQuotaPoliciesMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.ImportAdminQuotaPoliciesMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportAdminQuotaPoliciesMetadata {
    return new ImportAdminQuotaPoliciesMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportAdminQuotaPoliciesMetadata {
    return new ImportAdminQuotaPoliciesMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportAdminQuotaPoliciesMetadata {
    return new ImportAdminQuotaPoliciesMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: ImportAdminQuotaPoliciesMetadata | PlainMessage<ImportAdminQuotaPoliciesMetadata> | undefined, b: ImportAdminQuotaPoliciesMetadata | PlainMessage<ImportAdminQuotaPoliciesMetadata> | undefined): boolean {
    return proto3.util.equals(ImportAdminQuotaPoliciesMetadata, a, b);
  }
}

/**
 * Metadata message that provides information such as progress,
 * partial failures, and similar information on each GetOperation call
 * of LRO returned by CreateAdminQuotaPolicy.
 *
 * @generated from message google.api.serviceusage.v1beta1.CreateAdminQuotaPolicyMetadata
 */
export class CreateAdminQuotaPolicyMetadata extends Message<CreateAdminQuotaPolicyMetadata> {
  constructor(data?: PartialMessage<CreateAdminQuotaPolicyMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.CreateAdminQuotaPolicyMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAdminQuotaPolicyMetadata {
    return new CreateAdminQuotaPolicyMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAdminQuotaPolicyMetadata {
    return new CreateAdminQuotaPolicyMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAdminQuotaPolicyMetadata {
    return new CreateAdminQuotaPolicyMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: CreateAdminQuotaPolicyMetadata | PlainMessage<CreateAdminQuotaPolicyMetadata> | undefined, b: CreateAdminQuotaPolicyMetadata | PlainMessage<CreateAdminQuotaPolicyMetadata> | undefined): boolean {
    return proto3.util.equals(CreateAdminQuotaPolicyMetadata, a, b);
  }
}

/**
 * Metadata message that provides information such as progress,
 * partial failures, and similar information on each GetOperation call
 * of LRO returned by UpdateAdminQuotaPolicy.
 *
 * @generated from message google.api.serviceusage.v1beta1.UpdateAdminQuotaPolicyMetadata
 */
export class UpdateAdminQuotaPolicyMetadata extends Message<UpdateAdminQuotaPolicyMetadata> {
  constructor(data?: PartialMessage<UpdateAdminQuotaPolicyMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.UpdateAdminQuotaPolicyMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAdminQuotaPolicyMetadata {
    return new UpdateAdminQuotaPolicyMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAdminQuotaPolicyMetadata {
    return new UpdateAdminQuotaPolicyMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAdminQuotaPolicyMetadata {
    return new UpdateAdminQuotaPolicyMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAdminQuotaPolicyMetadata | PlainMessage<UpdateAdminQuotaPolicyMetadata> | undefined, b: UpdateAdminQuotaPolicyMetadata | PlainMessage<UpdateAdminQuotaPolicyMetadata> | undefined): boolean {
    return proto3.util.equals(UpdateAdminQuotaPolicyMetadata, a, b);
  }
}

/**
 * Metadata message that provides information such as progress,
 * partial failures, and similar information on each GetOperation call
 * of LRO returned by DeleteAdminQuotaPolicy.
 *
 * @generated from message google.api.serviceusage.v1beta1.DeleteAdminQuotaPolicyMetadata
 */
export class DeleteAdminQuotaPolicyMetadata extends Message<DeleteAdminQuotaPolicyMetadata> {
  constructor(data?: PartialMessage<DeleteAdminQuotaPolicyMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.DeleteAdminQuotaPolicyMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAdminQuotaPolicyMetadata {
    return new DeleteAdminQuotaPolicyMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAdminQuotaPolicyMetadata {
    return new DeleteAdminQuotaPolicyMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAdminQuotaPolicyMetadata {
    return new DeleteAdminQuotaPolicyMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteAdminQuotaPolicyMetadata | PlainMessage<DeleteAdminQuotaPolicyMetadata> | undefined, b: DeleteAdminQuotaPolicyMetadata | PlainMessage<DeleteAdminQuotaPolicyMetadata> | undefined): boolean {
    return proto3.util.equals(DeleteAdminQuotaPolicyMetadata, a, b);
  }
}

/**
 * Request message for generating service identity.
 *
 * @generated from message google.api.serviceusage.v1beta1.GenerateServiceIdentityRequest
 */
export class GenerateServiceIdentityRequest extends Message<GenerateServiceIdentityRequest> {
  /**
   * Name of the consumer and service to generate an identity for.
   *
   * The `GenerateServiceIdentity` methods currently only support projects.
   *
   * An example name would be:
   * `projects/123/services/example.googleapis.com` where `123` is the
   * project number.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  constructor(data?: PartialMessage<GenerateServiceIdentityRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.GenerateServiceIdentityRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateServiceIdentityRequest {
    return new GenerateServiceIdentityRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateServiceIdentityRequest {
    return new GenerateServiceIdentityRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateServiceIdentityRequest {
    return new GenerateServiceIdentityRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateServiceIdentityRequest | PlainMessage<GenerateServiceIdentityRequest> | undefined, b: GenerateServiceIdentityRequest | PlainMessage<GenerateServiceIdentityRequest> | undefined): boolean {
    return proto3.util.equals(GenerateServiceIdentityRequest, a, b);
  }
}

/**
 * Response message for getting service identity.
 *
 * @generated from message google.api.serviceusage.v1beta1.GetServiceIdentityResponse
 */
export class GetServiceIdentityResponse extends Message<GetServiceIdentityResponse> {
  /**
   * Service identity that service producer can use to access consumer
   * resources. If exists is true, it contains email and unique_id. If exists is
   * false, it contains pre-constructed email and empty unique_id.
   *
   * @generated from field: google.api.serviceusage.v1beta1.ServiceIdentity identity = 1;
   */
  identity?: ServiceIdentity;

  /**
   * Service identity state.
   *
   * @generated from field: google.api.serviceusage.v1beta1.GetServiceIdentityResponse.IdentityState state = 2;
   */
  state = GetServiceIdentityResponse_IdentityState.IDENTITY_STATE_UNSPECIFIED;

  constructor(data?: PartialMessage<GetServiceIdentityResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.GetServiceIdentityResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "identity", kind: "message", T: ServiceIdentity },
    { no: 2, name: "state", kind: "enum", T: proto3.getEnumType(GetServiceIdentityResponse_IdentityState) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetServiceIdentityResponse {
    return new GetServiceIdentityResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetServiceIdentityResponse {
    return new GetServiceIdentityResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetServiceIdentityResponse {
    return new GetServiceIdentityResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetServiceIdentityResponse | PlainMessage<GetServiceIdentityResponse> | undefined, b: GetServiceIdentityResponse | PlainMessage<GetServiceIdentityResponse> | undefined): boolean {
    return proto3.util.equals(GetServiceIdentityResponse, a, b);
  }
}

/**
 * Enum for service identity state.
 *
 * @generated from enum google.api.serviceusage.v1beta1.GetServiceIdentityResponse.IdentityState
 */
export enum GetServiceIdentityResponse_IdentityState {
  /**
   * Default service identity state. This value is used if the state is
   * omitted.
   *
   * @generated from enum value: IDENTITY_STATE_UNSPECIFIED = 0;
   */
  IDENTITY_STATE_UNSPECIFIED = 0,

  /**
   * Service identity has been created and can be used.
   *
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(GetServiceIdentityResponse_IdentityState)
proto3.util.setEnumType(GetServiceIdentityResponse_IdentityState, "google.api.serviceusage.v1beta1.GetServiceIdentityResponse.IdentityState", [
  { no: 0, name: "IDENTITY_STATE_UNSPECIFIED" },
  { no: 1, name: "ACTIVE" },
]);

/**
 * Metadata for the `GetServiceIdentity` method.
 *
 * @generated from message google.api.serviceusage.v1beta1.GetServiceIdentityMetadata
 */
export class GetServiceIdentityMetadata extends Message<GetServiceIdentityMetadata> {
  constructor(data?: PartialMessage<GetServiceIdentityMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.GetServiceIdentityMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetServiceIdentityMetadata {
    return new GetServiceIdentityMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetServiceIdentityMetadata {
    return new GetServiceIdentityMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetServiceIdentityMetadata {
    return new GetServiceIdentityMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: GetServiceIdentityMetadata | PlainMessage<GetServiceIdentityMetadata> | undefined, b: GetServiceIdentityMetadata | PlainMessage<GetServiceIdentityMetadata> | undefined): boolean {
    return proto3.util.equals(GetServiceIdentityMetadata, a, b);
  }
}

