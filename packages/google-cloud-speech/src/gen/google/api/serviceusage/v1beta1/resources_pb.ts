// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file google/api/serviceusage/v1beta1/resources.proto (package google.api.serviceusage.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Api, Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Documentation } from "../../documentation_pb.js";
import { Quota } from "../../quota_pb.js";
import { Authentication } from "../../auth_pb.js";
import { Usage } from "../../usage_pb.js";
import { Endpoint } from "../../endpoint_pb.js";
import { MonitoredResourceDescriptor } from "../../monitored_resource_pb.js";
import { Monitoring } from "../../monitoring_pb.js";

/**
 * Whether or not a service has been enabled for use by a consumer.
 *
 * @generated from enum google.api.serviceusage.v1beta1.State
 */
export enum State {
  /**
   * The default value, which indicates that the enabled state of the service
   * is unspecified or not meaningful. Currently, all consumers other than
   * projects (such as folders and organizations) are always in this state.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * The service cannot be used by this consumer. It has either been explicitly
   * disabled, or has never been enabled.
   *
   * @generated from enum value: DISABLED = 1;
   */
  DISABLED = 1,

  /**
   * The service has been explicitly enabled for use by this consumer.
   *
   * @generated from enum value: ENABLED = 2;
   */
  ENABLED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(State)
proto3.util.setEnumType(State, "google.api.serviceusage.v1beta1.State", [
  { no: 0, name: "STATE_UNSPECIFIED" },
  { no: 1, name: "DISABLED" },
  { no: 2, name: "ENABLED" },
]);

/**
 * Selected view of quota. Can be used to request more detailed quota
 * information when retrieving quota metrics and limits.
 *
 * @generated from enum google.api.serviceusage.v1beta1.QuotaView
 */
export enum QuotaView {
  /**
   * No quota view specified. Requests that do not specify a quota view will
   * typically default to the BASIC view.
   *
   * @generated from enum value: QUOTA_VIEW_UNSPECIFIED = 0;
   */
  QUOTA_VIEW_UNSPECIFIED = 0,

  /**
   * Only buckets with overrides are shown in the response.
   *
   * @generated from enum value: BASIC = 1;
   */
  BASIC = 1,

  /**
   * Include per-location buckets even if they do not have overrides.
   * When the view is FULL, and a limit has regional or zonal quota, the limit
   * will include buckets for all regions or zones that could support
   * overrides, even if none are currently present. In some cases this will
   * cause the response to become very large; callers that do not need this
   * extra information should use the BASIC view instead.
   *
   * @generated from enum value: FULL = 2;
   */
  FULL = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(QuotaView)
proto3.util.setEnumType(QuotaView, "google.api.serviceusage.v1beta1.QuotaView", [
  { no: 0, name: "QUOTA_VIEW_UNSPECIFIED" },
  { no: 1, name: "BASIC" },
  { no: 2, name: "FULL" },
]);

/**
 * Enumerations of quota safety checks.
 *
 * @generated from enum google.api.serviceusage.v1beta1.QuotaSafetyCheck
 */
export enum QuotaSafetyCheck {
  /**
   * Unspecified quota safety check.
   *
   * @generated from enum value: QUOTA_SAFETY_CHECK_UNSPECIFIED = 0;
   */
  QUOTA_SAFETY_CHECK_UNSPECIFIED = 0,

  /**
   * Validates that a quota mutation would not cause the consumer's effective
   * limit to be lower than the consumer's quota usage.
   *
   * @generated from enum value: LIMIT_DECREASE_BELOW_USAGE = 1;
   */
  LIMIT_DECREASE_BELOW_USAGE = 1,

  /**
   * Validates that a quota mutation would not cause the consumer's effective
   * limit to decrease by more than 10 percent.
   *
   * @generated from enum value: LIMIT_DECREASE_PERCENTAGE_TOO_HIGH = 2;
   */
  LIMIT_DECREASE_PERCENTAGE_TOO_HIGH = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(QuotaSafetyCheck)
proto3.util.setEnumType(QuotaSafetyCheck, "google.api.serviceusage.v1beta1.QuotaSafetyCheck", [
  { no: 0, name: "QUOTA_SAFETY_CHECK_UNSPECIFIED" },
  { no: 1, name: "LIMIT_DECREASE_BELOW_USAGE" },
  { no: 2, name: "LIMIT_DECREASE_PERCENTAGE_TOO_HIGH" },
]);

/**
 * A service that is available for use by the consumer.
 *
 * @generated from message google.api.serviceusage.v1beta1.Service
 */
export class Service extends Message<Service> {
  /**
   * The resource name of the consumer and service.
   *
   * A valid name would be:
   * - `projects/123/services/serviceusage.googleapis.com`
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The resource name of the consumer.
   *
   * A valid name would be:
   * - `projects/123`
   *
   * @generated from field: string parent = 5;
   */
  parent = "";

  /**
   * The service configuration of the available service.
   * Some fields may be filtered out of the configuration in responses to
   * the `ListServices` method. These fields are present only in responses to
   * the `GetService` method.
   *
   * @generated from field: google.api.serviceusage.v1beta1.ServiceConfig config = 2;
   */
  config?: ServiceConfig;

  /**
   * Whether or not the service has been enabled for use by the consumer.
   *
   * @generated from field: google.api.serviceusage.v1beta1.State state = 4;
   */
  state = State.STATE_UNSPECIFIED;

  constructor(data?: PartialMessage<Service>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.Service";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "config", kind: "message", T: ServiceConfig },
    { no: 4, name: "state", kind: "enum", T: proto3.getEnumType(State) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Service {
    return new Service().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Service {
    return new Service().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Service {
    return new Service().fromJsonString(jsonString, options);
  }

  static equals(a: Service | PlainMessage<Service> | undefined, b: Service | PlainMessage<Service> | undefined): boolean {
    return proto3.util.equals(Service, a, b);
  }
}

/**
 * The configuration of the service.
 *
 * @generated from message google.api.serviceusage.v1beta1.ServiceConfig
 */
export class ServiceConfig extends Message<ServiceConfig> {
  /**
   * The DNS address at which this service is available.
   *
   * An example DNS address would be:
   * `calendar.googleapis.com`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The product title for this service.
   *
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * A list of API interfaces exported by this service. Contains only the names,
   * versions, and method names of the interfaces.
   *
   * @generated from field: repeated google.protobuf.Api apis = 3;
   */
  apis: Api[] = [];

  /**
   * Additional API documentation. Contains only the summary and the
   * documentation URL.
   *
   * @generated from field: google.api.Documentation documentation = 6;
   */
  documentation?: Documentation;

  /**
   * Quota configuration.
   *
   * @generated from field: google.api.Quota quota = 10;
   */
  quota?: Quota;

  /**
   * Auth configuration. Contains only the OAuth rules.
   *
   * @generated from field: google.api.Authentication authentication = 11;
   */
  authentication?: Authentication;

  /**
   * Configuration controlling usage of this service.
   *
   * @generated from field: google.api.Usage usage = 15;
   */
  usage?: Usage;

  /**
   * Configuration for network endpoints. Contains only the names and aliases
   * of the endpoints.
   *
   * @generated from field: repeated google.api.Endpoint endpoints = 18;
   */
  endpoints: Endpoint[] = [];

  /**
   * Defines the monitored resources used by this service. This is required
   * by the [Service.monitoring][google.api.Service.monitoring] and [Service.logging][google.api.Service.logging] configurations.
   *
   * @generated from field: repeated google.api.MonitoredResourceDescriptor monitored_resources = 25;
   */
  monitoredResources: MonitoredResourceDescriptor[] = [];

  /**
   * Monitoring configuration.
   * This should not include the 'producer_destinations' field.
   *
   * @generated from field: google.api.Monitoring monitoring = 28;
   */
  monitoring?: Monitoring;

  constructor(data?: PartialMessage<ServiceConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.ServiceConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "apis", kind: "message", T: Api, repeated: true },
    { no: 6, name: "documentation", kind: "message", T: Documentation },
    { no: 10, name: "quota", kind: "message", T: Quota },
    { no: 11, name: "authentication", kind: "message", T: Authentication },
    { no: 15, name: "usage", kind: "message", T: Usage },
    { no: 18, name: "endpoints", kind: "message", T: Endpoint, repeated: true },
    { no: 25, name: "monitored_resources", kind: "message", T: MonitoredResourceDescriptor, repeated: true },
    { no: 28, name: "monitoring", kind: "message", T: Monitoring },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServiceConfig {
    return new ServiceConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServiceConfig {
    return new ServiceConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServiceConfig {
    return new ServiceConfig().fromJsonString(jsonString, options);
  }

  static equals(a: ServiceConfig | PlainMessage<ServiceConfig> | undefined, b: ServiceConfig | PlainMessage<ServiceConfig> | undefined): boolean {
    return proto3.util.equals(ServiceConfig, a, b);
  }
}

/**
 * The operation metadata returned for the batchend services operation.
 *
 * @generated from message google.api.serviceusage.v1beta1.OperationMetadata
 */
export class OperationMetadata extends Message<OperationMetadata> {
  /**
   * The full name of the resources that this operation is directly
   * associated with.
   *
   * @generated from field: repeated string resource_names = 2;
   */
  resourceNames: string[] = [];

  constructor(data?: PartialMessage<OperationMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.OperationMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "resource_names", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperationMetadata {
    return new OperationMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperationMetadata {
    return new OperationMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperationMetadata {
    return new OperationMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: OperationMetadata | PlainMessage<OperationMetadata> | undefined, b: OperationMetadata | PlainMessage<OperationMetadata> | undefined): boolean {
    return proto3.util.equals(OperationMetadata, a, b);
  }
}

/**
 * Consumer quota settings for a quota metric.
 *
 * @generated from message google.api.serviceusage.v1beta1.ConsumerQuotaMetric
 */
export class ConsumerQuotaMetric extends Message<ConsumerQuotaMetric> {
  /**
   * The resource name of the quota settings on this metric for this consumer.
   *
   * An example name would be:
   * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus`
   *
   * The resource name is intended to be opaque and should not be parsed for
   * its component strings, since its representation could change in the future.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The name of the metric.
   *
   * An example name would be:
   * `compute.googleapis.com/cpus`
   *
   * @generated from field: string metric = 4;
   */
  metric = "";

  /**
   * The display name of the metric.
   *
   * An example name would be:
   * `CPUs`
   *
   * @generated from field: string display_name = 2;
   */
  displayName = "";

  /**
   * The consumer quota for each quota limit defined on the metric.
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.ConsumerQuotaLimit consumer_quota_limits = 3;
   */
  consumerQuotaLimits: ConsumerQuotaLimit[] = [];

  /**
   * The quota limits targeting the descendant containers of the
   * consumer in request.
   *
   * If the consumer in request is of type `organizations`
   * or `folders`, the field will list per-project limits in the metric; if the
   * consumer in request is of type `project`, the field will be empty.
   *
   * The `quota_buckets` field of each descendant consumer quota limit will not
   * be populated.
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.ConsumerQuotaLimit descendant_consumer_quota_limits = 6;
   */
  descendantConsumerQuotaLimits: ConsumerQuotaLimit[] = [];

  /**
   * The units in which the metric value is reported.
   *
   * @generated from field: string unit = 5;
   */
  unit = "";

  constructor(data?: PartialMessage<ConsumerQuotaMetric>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.ConsumerQuotaMetric";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "metric", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "consumer_quota_limits", kind: "message", T: ConsumerQuotaLimit, repeated: true },
    { no: 6, name: "descendant_consumer_quota_limits", kind: "message", T: ConsumerQuotaLimit, repeated: true },
    { no: 5, name: "unit", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConsumerQuotaMetric {
    return new ConsumerQuotaMetric().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConsumerQuotaMetric {
    return new ConsumerQuotaMetric().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConsumerQuotaMetric {
    return new ConsumerQuotaMetric().fromJsonString(jsonString, options);
  }

  static equals(a: ConsumerQuotaMetric | PlainMessage<ConsumerQuotaMetric> | undefined, b: ConsumerQuotaMetric | PlainMessage<ConsumerQuotaMetric> | undefined): boolean {
    return proto3.util.equals(ConsumerQuotaMetric, a, b);
  }
}

/**
 * Consumer quota settings for a quota limit.
 *
 * @generated from message google.api.serviceusage.v1beta1.ConsumerQuotaLimit
 */
export class ConsumerQuotaLimit extends Message<ConsumerQuotaLimit> {
  /**
   * The resource name of the quota limit.
   *
   * An example name would be:
   * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
   *
   * The resource name is intended to be opaque and should not be parsed for
   * its component strings, since its representation could change in the future.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The name of the parent metric of this limit.
   *
   * An example name would be:
   * `compute.googleapis.com/cpus`
   *
   * @generated from field: string metric = 8;
   */
  metric = "";

  /**
   * The limit unit.
   *
   * An example unit would be
   * `1/{project}/{region}`
   * Note that `{project}` and `{region}` are not placeholders in this example;
   * the literal characters `{` and `}` occur in the string.
   *
   * @generated from field: string unit = 2;
   */
  unit = "";

  /**
   * Whether this limit is precise or imprecise.
   *
   * @generated from field: bool is_precise = 3;
   */
  isPrecise = false;

  /**
   * Whether admin overrides are allowed on this limit
   *
   * @generated from field: bool allows_admin_overrides = 7;
   */
  allowsAdminOverrides = false;

  /**
   * Summary of the enforced quota buckets, organized by quota dimension,
   * ordered from least specific to most specific (for example, the global
   * default bucket, with no quota dimensions, will always appear first).
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.QuotaBucket quota_buckets = 9;
   */
  quotaBuckets: QuotaBucket[] = [];

  constructor(data?: PartialMessage<ConsumerQuotaLimit>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.ConsumerQuotaLimit";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "metric", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "unit", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "is_precise", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "allows_admin_overrides", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "quota_buckets", kind: "message", T: QuotaBucket, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConsumerQuotaLimit {
    return new ConsumerQuotaLimit().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConsumerQuotaLimit {
    return new ConsumerQuotaLimit().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConsumerQuotaLimit {
    return new ConsumerQuotaLimit().fromJsonString(jsonString, options);
  }

  static equals(a: ConsumerQuotaLimit | PlainMessage<ConsumerQuotaLimit> | undefined, b: ConsumerQuotaLimit | PlainMessage<ConsumerQuotaLimit> | undefined): boolean {
    return proto3.util.equals(ConsumerQuotaLimit, a, b);
  }
}

/**
 * A quota bucket is a quota provisioning unit for a specific set of dimensions.
 *
 * @generated from message google.api.serviceusage.v1beta1.QuotaBucket
 */
export class QuotaBucket extends Message<QuotaBucket> {
  /**
   * The effective limit of this quota bucket. Equal to default_limit if there
   * are no overrides.
   *
   * @generated from field: int64 effective_limit = 1;
   */
  effectiveLimit = protoInt64.zero;

  /**
   * The default limit of this quota bucket, as specified by the service
   * configuration.
   *
   * @generated from field: int64 default_limit = 2;
   */
  defaultLimit = protoInt64.zero;

  /**
   * Producer override on this quota bucket.
   *
   * @generated from field: google.api.serviceusage.v1beta1.QuotaOverride producer_override = 3;
   */
  producerOverride?: QuotaOverride;

  /**
   * Consumer override on this quota bucket.
   *
   * @generated from field: google.api.serviceusage.v1beta1.QuotaOverride consumer_override = 4;
   */
  consumerOverride?: QuotaOverride;

  /**
   * Admin override on this quota bucket.
   *
   * @generated from field: google.api.serviceusage.v1beta1.QuotaOverride admin_override = 5;
   */
  adminOverride?: QuotaOverride;

  /**
   * The dimensions of this quota bucket.
   *
   * If this map is empty, this is the global bucket, which is the default quota
   * value applied to all requests that do not have a more specific override.
   *
   * If this map is nonempty, the default limit, effective limit, and quota
   * overrides apply only to requests that have the dimensions given in the map.
   *
   * For example, if the map has key `region` and value `us-east-1`, then the
   * specified effective limit is only effective in that region, and the
   * specified overrides apply only in that region.
   *
   * @generated from field: map<string, string> dimensions = 6;
   */
  dimensions: { [key: string]: string } = {};

  constructor(data?: PartialMessage<QuotaBucket>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.QuotaBucket";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "effective_limit", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "default_limit", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "producer_override", kind: "message", T: QuotaOverride },
    { no: 4, name: "consumer_override", kind: "message", T: QuotaOverride },
    { no: 5, name: "admin_override", kind: "message", T: QuotaOverride },
    { no: 6, name: "dimensions", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotaBucket {
    return new QuotaBucket().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotaBucket {
    return new QuotaBucket().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotaBucket {
    return new QuotaBucket().fromJsonString(jsonString, options);
  }

  static equals(a: QuotaBucket | PlainMessage<QuotaBucket> | undefined, b: QuotaBucket | PlainMessage<QuotaBucket> | undefined): boolean {
    return proto3.util.equals(QuotaBucket, a, b);
  }
}

/**
 * A quota override
 *
 * @generated from message google.api.serviceusage.v1beta1.QuotaOverride
 */
export class QuotaOverride extends Message<QuotaOverride> {
  /**
   * The resource name of the override.
   * This name is generated by the server when the override is created.
   *
   * Example names would be:
   * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/adminOverrides/4a3f2c1d`
   * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/consumerOverrides/4a3f2c1d`
   *
   * The resource name is intended to be opaque and should not be parsed for
   * its component strings, since its representation could change in the future.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The overriding quota limit value.
   * Can be any nonnegative integer, or -1 (unlimited quota).
   *
   * @generated from field: int64 override_value = 2;
   */
  overrideValue = protoInt64.zero;

  /**
   * If this map is nonempty, then this override applies only to specific values
   * for dimensions defined in the limit unit.
   *
   * For example, an override on a limit with the unit `1/{project}/{region}`
   * could contain an entry with the key `region` and the value `us-east-1`;
   * the override is only applied to quota consumed in that region.
   *
   * This map has the following restrictions:
   *
   * *   Keys that are not defined in the limit's unit are not valid keys.
   *     Any string appearing in `{brackets}` in the unit (besides `{project}`
   *     or
   *     `{user}`) is a defined key.
   * *   `project` is not a valid key; the project is already specified in
   *     the parent resource name.
   * *   `user` is not a valid key; the API does not support quota overrides
   *     that apply only to a specific user.
   * *   If `region` appears as a key, its value must be a valid Cloud region.
   * *   If `zone` appears as a key, its value must be a valid Cloud zone.
   * *   If any valid key other than `region` or `zone` appears in the map, then
   *     all valid keys other than `region` or `zone` must also appear in the
   *     map.
   *
   * @generated from field: map<string, string> dimensions = 3;
   */
  dimensions: { [key: string]: string } = {};

  /**
   * The name of the metric to which this override applies.
   *
   * An example name would be:
   * `compute.googleapis.com/cpus`
   *
   * @generated from field: string metric = 4;
   */
  metric = "";

  /**
   * The limit unit of the limit to which this override applies.
   *
   * An example unit would be:
   * `1/{project}/{region}`
   * Note that `{project}` and `{region}` are not placeholders in this example;
   * the literal characters `{` and `}` occur in the string.
   *
   * @generated from field: string unit = 5;
   */
  unit = "";

  /**
   * The resource name of the ancestor that requested the override. For example:
   * `organizations/12345` or `folders/67890`.
   * Used by admin overrides only.
   *
   * @generated from field: string admin_override_ancestor = 6;
   */
  adminOverrideAncestor = "";

  constructor(data?: PartialMessage<QuotaOverride>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.QuotaOverride";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "override_value", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "dimensions", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 4, name: "metric", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "unit", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "admin_override_ancestor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotaOverride {
    return new QuotaOverride().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotaOverride {
    return new QuotaOverride().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotaOverride {
    return new QuotaOverride().fromJsonString(jsonString, options);
  }

  static equals(a: QuotaOverride | PlainMessage<QuotaOverride> | undefined, b: QuotaOverride | PlainMessage<QuotaOverride> | undefined): boolean {
    return proto3.util.equals(QuotaOverride, a, b);
  }
}

/**
 * Import data embedded in the request message
 *
 * @generated from message google.api.serviceusage.v1beta1.OverrideInlineSource
 */
export class OverrideInlineSource extends Message<OverrideInlineSource> {
  /**
   * The overrides to create.
   * Each override must have a value for 'metric' and 'unit', to specify
   * which metric and which limit the override should be applied to.
   * The 'name' field of the override does not need to be set; it is ignored.
   *
   * @generated from field: repeated google.api.serviceusage.v1beta1.QuotaOverride overrides = 1;
   */
  overrides: QuotaOverride[] = [];

  constructor(data?: PartialMessage<OverrideInlineSource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.OverrideInlineSource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "overrides", kind: "message", T: QuotaOverride, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OverrideInlineSource {
    return new OverrideInlineSource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OverrideInlineSource {
    return new OverrideInlineSource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OverrideInlineSource {
    return new OverrideInlineSource().fromJsonString(jsonString, options);
  }

  static equals(a: OverrideInlineSource | PlainMessage<OverrideInlineSource> | undefined, b: OverrideInlineSource | PlainMessage<OverrideInlineSource> | undefined): boolean {
    return proto3.util.equals(OverrideInlineSource, a, b);
  }
}

/**
 * Quota policy created by quota administrator.
 *
 * @generated from message google.api.serviceusage.v1beta1.AdminQuotaPolicy
 */
export class AdminQuotaPolicy extends Message<AdminQuotaPolicy> {
  /**
   * The resource name of the policy.
   * This name is generated by the server when the policy is created.
   *
   * Example names would be:
   * `organizations/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/adminQuotaPolicies/4a3f2c1d`
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The quota policy value.
   * Can be any nonnegative integer, or -1 (unlimited quota).
   *
   * @generated from field: int64 policy_value = 2;
   */
  policyValue = protoInt64.zero;

  /**
   *
   * If this map is nonempty, then this policy applies only to specific values
   * for dimensions defined in the limit unit.
   *
   * For example, an policy on a limit with the unit `1/{project}/{region}`
   * could contain an entry with the key `region` and the value `us-east-1`;
   * the policy is only applied to quota consumed in that region.
   *
   * This map has the following restrictions:
   *
   * *   If `region` appears as a key, its value must be a valid Cloud region.
   * *   If `zone` appears as a key, its value must be a valid Cloud zone.
   * *   Keys other than `region` or `zone` are not valid.
   *
   * @generated from field: map<string, string> dimensions = 3;
   */
  dimensions: { [key: string]: string } = {};

  /**
   * The name of the metric to which this policy applies.
   *
   * An example name would be:
   * `compute.googleapis.com/cpus`
   *
   * @generated from field: string metric = 4;
   */
  metric = "";

  /**
   * The limit unit of the limit to which this policy applies.
   *
   * An example unit would be:
   * `1/{project}/{region}`
   * Note that `{project}` and `{region}` are not placeholders in this example;
   * the literal characters `{` and `}` occur in the string.
   *
   * @generated from field: string unit = 5;
   */
  unit = "";

  /**
   * The cloud resource container at which the quota policy is created. The
   * format is `{container_type}/{container_number}`
   *
   * @generated from field: string container = 6;
   */
  container = "";

  constructor(data?: PartialMessage<AdminQuotaPolicy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.AdminQuotaPolicy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "policy_value", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "dimensions", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 4, name: "metric", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "unit", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "container", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminQuotaPolicy {
    return new AdminQuotaPolicy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminQuotaPolicy {
    return new AdminQuotaPolicy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminQuotaPolicy {
    return new AdminQuotaPolicy().fromJsonString(jsonString, options);
  }

  static equals(a: AdminQuotaPolicy | PlainMessage<AdminQuotaPolicy> | undefined, b: AdminQuotaPolicy | PlainMessage<AdminQuotaPolicy> | undefined): boolean {
    return proto3.util.equals(AdminQuotaPolicy, a, b);
  }
}

/**
 * Service identity for a service. This is the identity that service producer
 * should use to access consumer resources.
 *
 * @generated from message google.api.serviceusage.v1beta1.ServiceIdentity
 */
export class ServiceIdentity extends Message<ServiceIdentity> {
  /**
   * The email address of the service account that a service producer would use
   * to access consumer resources.
   *
   * @generated from field: string email = 1;
   */
  email = "";

  /**
   * The unique and stable id of the service account.
   * https://cloud.google.com/iam/reference/rest/v1/projects.serviceAccounts#ServiceAccount
   *
   * @generated from field: string unique_id = 2;
   */
  uniqueId = "";

  constructor(data?: PartialMessage<ServiceIdentity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.serviceusage.v1beta1.ServiceIdentity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "unique_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServiceIdentity {
    return new ServiceIdentity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServiceIdentity {
    return new ServiceIdentity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServiceIdentity {
    return new ServiceIdentity().fromJsonString(jsonString, options);
  }

  static equals(a: ServiceIdentity | PlainMessage<ServiceIdentity> | undefined, b: ServiceIdentity | PlainMessage<ServiceIdentity> | undefined): boolean {
    return proto3.util.equals(ServiceIdentity, a, b);
  }
}

