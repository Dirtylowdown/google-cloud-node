// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file google/monitoring/v3/service_service.proto (package google.monitoring.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { FieldMask, Message, proto3 } from "@bufbuild/protobuf";
import { Service, ServiceLevelObjective, ServiceLevelObjective_View } from "./service_pb.js";

/**
 * The `CreateService` request.
 *
 * @generated from message google.monitoring.v3.CreateServiceRequest
 */
export class CreateServiceRequest extends Message<CreateServiceRequest> {
  /**
   * Required. Resource [name](https://cloud.google.com/monitoring/api/v3#project_name) of
   * the parent workspace. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * Optional. The Service id to use for this Service. If omitted, an id will be
   * generated instead. Must match the pattern `[a-z0-9\-]+`
   *
   * @generated from field: string service_id = 3;
   */
  serviceId = "";

  /**
   * Required. The `Service` to create.
   *
   * @generated from field: google.monitoring.v3.Service service = 2;
   */
  service?: Service;

  constructor(data?: PartialMessage<CreateServiceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.monitoring.v3.CreateServiceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "service_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "service", kind: "message", T: Service },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateServiceRequest {
    return new CreateServiceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateServiceRequest {
    return new CreateServiceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateServiceRequest {
    return new CreateServiceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateServiceRequest | PlainMessage<CreateServiceRequest> | undefined, b: CreateServiceRequest | PlainMessage<CreateServiceRequest> | undefined): boolean {
    return proto3.util.equals(CreateServiceRequest, a, b);
  }
}

/**
 * The `GetService` request.
 *
 * @generated from message google.monitoring.v3.GetServiceRequest
 */
export class GetServiceRequest extends Message<GetServiceRequest> {
  /**
   * Required. Resource name of the `Service`. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetServiceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.monitoring.v3.GetServiceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetServiceRequest {
    return new GetServiceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetServiceRequest {
    return new GetServiceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetServiceRequest {
    return new GetServiceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetServiceRequest | PlainMessage<GetServiceRequest> | undefined, b: GetServiceRequest | PlainMessage<GetServiceRequest> | undefined): boolean {
    return proto3.util.equals(GetServiceRequest, a, b);
  }
}

/**
 * The `ListServices` request.
 *
 * @generated from message google.monitoring.v3.ListServicesRequest
 */
export class ListServicesRequest extends Message<ListServicesRequest> {
  /**
   * Required. Resource name of the parent containing the listed services, either a
   * [project](https://cloud.google.com/monitoring/api/v3#project_name) or a
   * Monitoring Workspace. The formats are:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]
   *     workspaces/[HOST_PROJECT_ID_OR_NUMBER]
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * A filter specifying what `Service`s to return. The filter currently
   * supports the following fields:
   *
   *     - `identifier_case`
   *     - `app_engine.module_id`
   *     - `cloud_endpoints.service` (reserved for future use)
   *     - `mesh_istio.mesh_uid`
   *     - `mesh_istio.service_namespace`
   *     - `mesh_istio.service_name`
   *     - `cluster_istio.location` (deprecated)
   *     - `cluster_istio.cluster_name` (deprecated)
   *     - `cluster_istio.service_namespace` (deprecated)
   *     - `cluster_istio.service_name` (deprecated)
   *
   * `identifier_case` refers to which option in the identifier oneof is
   * populated. For example, the filter `identifier_case = "CUSTOM"` would match
   * all services with a value for the `custom` field. Valid options are
   * "CUSTOM", "APP_ENGINE", "MESH_ISTIO", plus "CLUSTER_ISTIO" (deprecated)
   * and "CLOUD_ENDPOINTS" (reserved for future use).
   *
   * @generated from field: string filter = 2;
   */
  filter = "";

  /**
   * A non-negative number that is the maximum number of results to return.
   * When 0, use default page size.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize = 0;

  /**
   * If this field is not empty then it must contain the `nextPageToken` value
   * returned by a previous call to this method.  Using this field causes the
   * method to return additional results from the previous method call.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken = "";

  constructor(data?: PartialMessage<ListServicesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.monitoring.v3.ListServicesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListServicesRequest {
    return new ListServicesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListServicesRequest {
    return new ListServicesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListServicesRequest {
    return new ListServicesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListServicesRequest | PlainMessage<ListServicesRequest> | undefined, b: ListServicesRequest | PlainMessage<ListServicesRequest> | undefined): boolean {
    return proto3.util.equals(ListServicesRequest, a, b);
  }
}

/**
 * The `ListServices` response.
 *
 * @generated from message google.monitoring.v3.ListServicesResponse
 */
export class ListServicesResponse extends Message<ListServicesResponse> {
  /**
   * The `Service`s matching the specified filter.
   *
   * @generated from field: repeated google.monitoring.v3.Service services = 1;
   */
  services: Service[] = [];

  /**
   * If there are more results than have been returned, then this field is set
   * to a non-empty value.  To see the additional results,
   * use that value as `page_token` in the next call to this method.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListServicesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.monitoring.v3.ListServicesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "services", kind: "message", T: Service, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListServicesResponse {
    return new ListServicesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListServicesResponse {
    return new ListServicesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListServicesResponse {
    return new ListServicesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListServicesResponse | PlainMessage<ListServicesResponse> | undefined, b: ListServicesResponse | PlainMessage<ListServicesResponse> | undefined): boolean {
    return proto3.util.equals(ListServicesResponse, a, b);
  }
}

/**
 * The `UpdateService` request.
 *
 * @generated from message google.monitoring.v3.UpdateServiceRequest
 */
export class UpdateServiceRequest extends Message<UpdateServiceRequest> {
  /**
   * Required. The `Service` to draw updates from.
   * The given `name` specifies the resource to update.
   *
   * @generated from field: google.monitoring.v3.Service service = 1;
   */
  service?: Service;

  /**
   * A set of field paths defining which fields to use for the update.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateServiceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.monitoring.v3.UpdateServiceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "service", kind: "message", T: Service },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateServiceRequest {
    return new UpdateServiceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateServiceRequest {
    return new UpdateServiceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateServiceRequest {
    return new UpdateServiceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateServiceRequest | PlainMessage<UpdateServiceRequest> | undefined, b: UpdateServiceRequest | PlainMessage<UpdateServiceRequest> | undefined): boolean {
    return proto3.util.equals(UpdateServiceRequest, a, b);
  }
}

/**
 * The `DeleteService` request.
 *
 * @generated from message google.monitoring.v3.DeleteServiceRequest
 */
export class DeleteServiceRequest extends Message<DeleteServiceRequest> {
  /**
   * Required. Resource name of the `Service` to delete. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteServiceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.monitoring.v3.DeleteServiceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteServiceRequest {
    return new DeleteServiceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteServiceRequest {
    return new DeleteServiceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteServiceRequest {
    return new DeleteServiceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteServiceRequest | PlainMessage<DeleteServiceRequest> | undefined, b: DeleteServiceRequest | PlainMessage<DeleteServiceRequest> | undefined): boolean {
    return proto3.util.equals(DeleteServiceRequest, a, b);
  }
}

/**
 * The `CreateServiceLevelObjective` request.
 *
 * @generated from message google.monitoring.v3.CreateServiceLevelObjectiveRequest
 */
export class CreateServiceLevelObjectiveRequest extends Message<CreateServiceLevelObjectiveRequest> {
  /**
   * Required. Resource name of the parent `Service`. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * Optional. The ServiceLevelObjective id to use for this
   * ServiceLevelObjective. If omitted, an id will be generated instead. Must
   * match the pattern `[a-z0-9\-]+`
   *
   * @generated from field: string service_level_objective_id = 3;
   */
  serviceLevelObjectiveId = "";

  /**
   * Required. The `ServiceLevelObjective` to create.
   * The provided `name` will be respected if no `ServiceLevelObjective` exists
   * with this name.
   *
   * @generated from field: google.monitoring.v3.ServiceLevelObjective service_level_objective = 2;
   */
  serviceLevelObjective?: ServiceLevelObjective;

  constructor(data?: PartialMessage<CreateServiceLevelObjectiveRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.monitoring.v3.CreateServiceLevelObjectiveRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "service_level_objective_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "service_level_objective", kind: "message", T: ServiceLevelObjective },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateServiceLevelObjectiveRequest {
    return new CreateServiceLevelObjectiveRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateServiceLevelObjectiveRequest {
    return new CreateServiceLevelObjectiveRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateServiceLevelObjectiveRequest {
    return new CreateServiceLevelObjectiveRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateServiceLevelObjectiveRequest | PlainMessage<CreateServiceLevelObjectiveRequest> | undefined, b: CreateServiceLevelObjectiveRequest | PlainMessage<CreateServiceLevelObjectiveRequest> | undefined): boolean {
    return proto3.util.equals(CreateServiceLevelObjectiveRequest, a, b);
  }
}

/**
 * The `GetServiceLevelObjective` request.
 *
 * @generated from message google.monitoring.v3.GetServiceLevelObjectiveRequest
 */
export class GetServiceLevelObjectiveRequest extends Message<GetServiceLevelObjectiveRequest> {
  /**
   * Required. Resource name of the `ServiceLevelObjective` to get. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * View of the `ServiceLevelObjective` to return. If `DEFAULT`, return the
   * `ServiceLevelObjective` as originally defined. If `EXPLICIT` and the
   * `ServiceLevelObjective` is defined in terms of a `BasicSli`, replace the
   * `BasicSli` with a `RequestBasedSli` spelling out how the SLI is computed.
   *
   * @generated from field: google.monitoring.v3.ServiceLevelObjective.View view = 2;
   */
  view = ServiceLevelObjective_View.VIEW_UNSPECIFIED;

  constructor(data?: PartialMessage<GetServiceLevelObjectiveRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.monitoring.v3.GetServiceLevelObjectiveRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "view", kind: "enum", T: proto3.getEnumType(ServiceLevelObjective_View) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetServiceLevelObjectiveRequest {
    return new GetServiceLevelObjectiveRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetServiceLevelObjectiveRequest {
    return new GetServiceLevelObjectiveRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetServiceLevelObjectiveRequest {
    return new GetServiceLevelObjectiveRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetServiceLevelObjectiveRequest | PlainMessage<GetServiceLevelObjectiveRequest> | undefined, b: GetServiceLevelObjectiveRequest | PlainMessage<GetServiceLevelObjectiveRequest> | undefined): boolean {
    return proto3.util.equals(GetServiceLevelObjectiveRequest, a, b);
  }
}

/**
 * The `ListServiceLevelObjectives` request.
 *
 * @generated from message google.monitoring.v3.ListServiceLevelObjectivesRequest
 */
export class ListServiceLevelObjectivesRequest extends Message<ListServiceLevelObjectivesRequest> {
  /**
   * Required. Resource name of the parent containing the listed SLOs, either a
   * project or a Monitoring Workspace. The formats are:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]
   *     workspaces/[HOST_PROJECT_ID_OR_NUMBER]/services/-
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * A filter specifying what `ServiceLevelObjective`s to return.
   *
   * @generated from field: string filter = 2;
   */
  filter = "";

  /**
   * A non-negative number that is the maximum number of results to return.
   * When 0, use default page size.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize = 0;

  /**
   * If this field is not empty then it must contain the `nextPageToken` value
   * returned by a previous call to this method.  Using this field causes the
   * method to return additional results from the previous method call.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken = "";

  /**
   * View of the `ServiceLevelObjective`s to return. If `DEFAULT`, return each
   * `ServiceLevelObjective` as originally defined. If `EXPLICIT` and the
   * `ServiceLevelObjective` is defined in terms of a `BasicSli`, replace the
   * `BasicSli` with a `RequestBasedSli` spelling out how the SLI is computed.
   *
   * @generated from field: google.monitoring.v3.ServiceLevelObjective.View view = 5;
   */
  view = ServiceLevelObjective_View.VIEW_UNSPECIFIED;

  constructor(data?: PartialMessage<ListServiceLevelObjectivesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.monitoring.v3.ListServiceLevelObjectivesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "view", kind: "enum", T: proto3.getEnumType(ServiceLevelObjective_View) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListServiceLevelObjectivesRequest {
    return new ListServiceLevelObjectivesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListServiceLevelObjectivesRequest {
    return new ListServiceLevelObjectivesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListServiceLevelObjectivesRequest {
    return new ListServiceLevelObjectivesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListServiceLevelObjectivesRequest | PlainMessage<ListServiceLevelObjectivesRequest> | undefined, b: ListServiceLevelObjectivesRequest | PlainMessage<ListServiceLevelObjectivesRequest> | undefined): boolean {
    return proto3.util.equals(ListServiceLevelObjectivesRequest, a, b);
  }
}

/**
 * The `ListServiceLevelObjectives` response.
 *
 * @generated from message google.monitoring.v3.ListServiceLevelObjectivesResponse
 */
export class ListServiceLevelObjectivesResponse extends Message<ListServiceLevelObjectivesResponse> {
  /**
   * The `ServiceLevelObjective`s matching the specified filter.
   *
   * @generated from field: repeated google.monitoring.v3.ServiceLevelObjective service_level_objectives = 1;
   */
  serviceLevelObjectives: ServiceLevelObjective[] = [];

  /**
   * If there are more results than have been returned, then this field is set
   * to a non-empty value.  To see the additional results,
   * use that value as `page_token` in the next call to this method.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListServiceLevelObjectivesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.monitoring.v3.ListServiceLevelObjectivesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "service_level_objectives", kind: "message", T: ServiceLevelObjective, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListServiceLevelObjectivesResponse {
    return new ListServiceLevelObjectivesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListServiceLevelObjectivesResponse {
    return new ListServiceLevelObjectivesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListServiceLevelObjectivesResponse {
    return new ListServiceLevelObjectivesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListServiceLevelObjectivesResponse | PlainMessage<ListServiceLevelObjectivesResponse> | undefined, b: ListServiceLevelObjectivesResponse | PlainMessage<ListServiceLevelObjectivesResponse> | undefined): boolean {
    return proto3.util.equals(ListServiceLevelObjectivesResponse, a, b);
  }
}

/**
 * The `UpdateServiceLevelObjective` request.
 *
 * @generated from message google.monitoring.v3.UpdateServiceLevelObjectiveRequest
 */
export class UpdateServiceLevelObjectiveRequest extends Message<UpdateServiceLevelObjectiveRequest> {
  /**
   * Required. The `ServiceLevelObjective` to draw updates from.
   * The given `name` specifies the resource to update.
   *
   * @generated from field: google.monitoring.v3.ServiceLevelObjective service_level_objective = 1;
   */
  serviceLevelObjective?: ServiceLevelObjective;

  /**
   * A set of field paths defining which fields to use for the update.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateServiceLevelObjectiveRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.monitoring.v3.UpdateServiceLevelObjectiveRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "service_level_objective", kind: "message", T: ServiceLevelObjective },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateServiceLevelObjectiveRequest {
    return new UpdateServiceLevelObjectiveRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateServiceLevelObjectiveRequest {
    return new UpdateServiceLevelObjectiveRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateServiceLevelObjectiveRequest {
    return new UpdateServiceLevelObjectiveRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateServiceLevelObjectiveRequest | PlainMessage<UpdateServiceLevelObjectiveRequest> | undefined, b: UpdateServiceLevelObjectiveRequest | PlainMessage<UpdateServiceLevelObjectiveRequest> | undefined): boolean {
    return proto3.util.equals(UpdateServiceLevelObjectiveRequest, a, b);
  }
}

/**
 * The `DeleteServiceLevelObjective` request.
 *
 * @generated from message google.monitoring.v3.DeleteServiceLevelObjectiveRequest
 */
export class DeleteServiceLevelObjectiveRequest extends Message<DeleteServiceLevelObjectiveRequest> {
  /**
   * Required. Resource name of the `ServiceLevelObjective` to delete. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteServiceLevelObjectiveRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.monitoring.v3.DeleteServiceLevelObjectiveRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteServiceLevelObjectiveRequest {
    return new DeleteServiceLevelObjectiveRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteServiceLevelObjectiveRequest {
    return new DeleteServiceLevelObjectiveRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteServiceLevelObjectiveRequest {
    return new DeleteServiceLevelObjectiveRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteServiceLevelObjectiveRequest | PlainMessage<DeleteServiceLevelObjectiveRequest> | undefined, b: DeleteServiceLevelObjectiveRequest | PlainMessage<DeleteServiceLevelObjectiveRequest> | undefined): boolean {
    return proto3.util.equals(DeleteServiceLevelObjectiveRequest, a, b);
  }
}

