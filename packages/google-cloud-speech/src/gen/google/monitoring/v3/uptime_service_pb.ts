// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file google/monitoring/v3/uptime_service.proto (package google.monitoring.v3, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { FieldMask, Message, proto3 } from "@bufbuild/protobuf";
import { UptimeCheckConfig, UptimeCheckIp } from "./uptime_pb.js";

/**
 * The protocol for the `ListUptimeCheckConfigs` request.
 *
 * @generated from message google.monitoring.v3.ListUptimeCheckConfigsRequest
 */
export class ListUptimeCheckConfigsRequest extends Message<ListUptimeCheckConfigsRequest> {
  /**
   * Required. The
   * [project](https://cloud.google.com/monitoring/api/v3#project_name) whose
   * Uptime check configurations are listed. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The maximum number of results to return in a single response. The server
   * may further constrain the maximum number of results returned in a single
   * page. If the page_size is <=0, the server will decide the number of results
   * to be returned.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize = 0;

  /**
   * If this field is not empty then it must contain the `nextPageToken` value
   * returned by a previous call to this method.  Using this field causes the
   * method to return more results from the previous method call.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken = "";

  constructor(data?: PartialMessage<ListUptimeCheckConfigsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.monitoring.v3.ListUptimeCheckConfigsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUptimeCheckConfigsRequest {
    return new ListUptimeCheckConfigsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUptimeCheckConfigsRequest {
    return new ListUptimeCheckConfigsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUptimeCheckConfigsRequest {
    return new ListUptimeCheckConfigsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListUptimeCheckConfigsRequest | PlainMessage<ListUptimeCheckConfigsRequest> | undefined, b: ListUptimeCheckConfigsRequest | PlainMessage<ListUptimeCheckConfigsRequest> | undefined): boolean {
    return proto3.util.equals(ListUptimeCheckConfigsRequest, a, b);
  }
}

/**
 * The protocol for the `ListUptimeCheckConfigs` response.
 *
 * @generated from message google.monitoring.v3.ListUptimeCheckConfigsResponse
 */
export class ListUptimeCheckConfigsResponse extends Message<ListUptimeCheckConfigsResponse> {
  /**
   * The returned Uptime check configurations.
   *
   * @generated from field: repeated google.monitoring.v3.UptimeCheckConfig uptime_check_configs = 1;
   */
  uptimeCheckConfigs: UptimeCheckConfig[] = [];

  /**
   * This field represents the pagination token to retrieve the next page of
   * results. If the value is empty, it means no further results for the
   * request. To retrieve the next page of results, the value of the
   * next_page_token is passed to the subsequent List method call (in the
   * request message's page_token field).
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  /**
   * The total number of Uptime check configurations for the project,
   * irrespective of any pagination.
   *
   * @generated from field: int32 total_size = 3;
   */
  totalSize = 0;

  constructor(data?: PartialMessage<ListUptimeCheckConfigsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.monitoring.v3.ListUptimeCheckConfigsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uptime_check_configs", kind: "message", T: UptimeCheckConfig, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "total_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUptimeCheckConfigsResponse {
    return new ListUptimeCheckConfigsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUptimeCheckConfigsResponse {
    return new ListUptimeCheckConfigsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUptimeCheckConfigsResponse {
    return new ListUptimeCheckConfigsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListUptimeCheckConfigsResponse | PlainMessage<ListUptimeCheckConfigsResponse> | undefined, b: ListUptimeCheckConfigsResponse | PlainMessage<ListUptimeCheckConfigsResponse> | undefined): boolean {
    return proto3.util.equals(ListUptimeCheckConfigsResponse, a, b);
  }
}

/**
 * The protocol for the `GetUptimeCheckConfig` request.
 *
 * @generated from message google.monitoring.v3.GetUptimeCheckConfigRequest
 */
export class GetUptimeCheckConfigRequest extends Message<GetUptimeCheckConfigRequest> {
  /**
   * Required. The Uptime check configuration to retrieve. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/uptimeCheckConfigs/[UPTIME_CHECK_ID]
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetUptimeCheckConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.monitoring.v3.GetUptimeCheckConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUptimeCheckConfigRequest {
    return new GetUptimeCheckConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUptimeCheckConfigRequest {
    return new GetUptimeCheckConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUptimeCheckConfigRequest {
    return new GetUptimeCheckConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetUptimeCheckConfigRequest | PlainMessage<GetUptimeCheckConfigRequest> | undefined, b: GetUptimeCheckConfigRequest | PlainMessage<GetUptimeCheckConfigRequest> | undefined): boolean {
    return proto3.util.equals(GetUptimeCheckConfigRequest, a, b);
  }
}

/**
 * The protocol for the `CreateUptimeCheckConfig` request.
 *
 * @generated from message google.monitoring.v3.CreateUptimeCheckConfigRequest
 */
export class CreateUptimeCheckConfigRequest extends Message<CreateUptimeCheckConfigRequest> {
  /**
   * Required. The
   * [project](https://cloud.google.com/monitoring/api/v3#project_name) in which
   * to create the Uptime check. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * Required. The new Uptime check configuration.
   *
   * @generated from field: google.monitoring.v3.UptimeCheckConfig uptime_check_config = 2;
   */
  uptimeCheckConfig?: UptimeCheckConfig;

  constructor(data?: PartialMessage<CreateUptimeCheckConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.monitoring.v3.CreateUptimeCheckConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "uptime_check_config", kind: "message", T: UptimeCheckConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateUptimeCheckConfigRequest {
    return new CreateUptimeCheckConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateUptimeCheckConfigRequest {
    return new CreateUptimeCheckConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateUptimeCheckConfigRequest {
    return new CreateUptimeCheckConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateUptimeCheckConfigRequest | PlainMessage<CreateUptimeCheckConfigRequest> | undefined, b: CreateUptimeCheckConfigRequest | PlainMessage<CreateUptimeCheckConfigRequest> | undefined): boolean {
    return proto3.util.equals(CreateUptimeCheckConfigRequest, a, b);
  }
}

/**
 * The protocol for the `UpdateUptimeCheckConfig` request.
 *
 * @generated from message google.monitoring.v3.UpdateUptimeCheckConfigRequest
 */
export class UpdateUptimeCheckConfigRequest extends Message<UpdateUptimeCheckConfigRequest> {
  /**
   * Optional. If present, only the listed fields in the current Uptime check
   * configuration are updated with values from the new configuration. If this
   * field is empty, then the current configuration is completely replaced with
   * the new configuration.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  /**
   * Required. If an `updateMask` has been specified, this field gives
   * the values for the set of fields mentioned in the `updateMask`. If an
   * `updateMask` has not been given, this Uptime check configuration replaces
   * the current configuration. If a field is mentioned in `updateMask` but
   * the corresonding field is omitted in this partial Uptime check
   * configuration, it has the effect of deleting/clearing the field from the
   * configuration on the server.
   *
   * The following fields can be updated: `display_name`,
   * `http_check`, `tcp_check`, `timeout`, `content_matchers`, and
   * `selected_regions`.
   *
   * @generated from field: google.monitoring.v3.UptimeCheckConfig uptime_check_config = 3;
   */
  uptimeCheckConfig?: UptimeCheckConfig;

  constructor(data?: PartialMessage<UpdateUptimeCheckConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.monitoring.v3.UpdateUptimeCheckConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
    { no: 3, name: "uptime_check_config", kind: "message", T: UptimeCheckConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUptimeCheckConfigRequest {
    return new UpdateUptimeCheckConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUptimeCheckConfigRequest {
    return new UpdateUptimeCheckConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUptimeCheckConfigRequest {
    return new UpdateUptimeCheckConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUptimeCheckConfigRequest | PlainMessage<UpdateUptimeCheckConfigRequest> | undefined, b: UpdateUptimeCheckConfigRequest | PlainMessage<UpdateUptimeCheckConfigRequest> | undefined): boolean {
    return proto3.util.equals(UpdateUptimeCheckConfigRequest, a, b);
  }
}

/**
 * The protocol for the `DeleteUptimeCheckConfig` request.
 *
 * @generated from message google.monitoring.v3.DeleteUptimeCheckConfigRequest
 */
export class DeleteUptimeCheckConfigRequest extends Message<DeleteUptimeCheckConfigRequest> {
  /**
   * Required. The Uptime check configuration to delete. The format is:
   *
   *     projects/[PROJECT_ID_OR_NUMBER]/uptimeCheckConfigs/[UPTIME_CHECK_ID]
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteUptimeCheckConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.monitoring.v3.DeleteUptimeCheckConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteUptimeCheckConfigRequest {
    return new DeleteUptimeCheckConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteUptimeCheckConfigRequest {
    return new DeleteUptimeCheckConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteUptimeCheckConfigRequest {
    return new DeleteUptimeCheckConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteUptimeCheckConfigRequest | PlainMessage<DeleteUptimeCheckConfigRequest> | undefined, b: DeleteUptimeCheckConfigRequest | PlainMessage<DeleteUptimeCheckConfigRequest> | undefined): boolean {
    return proto3.util.equals(DeleteUptimeCheckConfigRequest, a, b);
  }
}

/**
 * The protocol for the `ListUptimeCheckIps` request.
 *
 * @generated from message google.monitoring.v3.ListUptimeCheckIpsRequest
 */
export class ListUptimeCheckIpsRequest extends Message<ListUptimeCheckIpsRequest> {
  /**
   * The maximum number of results to return in a single response. The server
   * may further constrain the maximum number of results returned in a single
   * page. If the page_size is <=0, the server will decide the number of results
   * to be returned.
   * NOTE: this field is not yet implemented
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * If this field is not empty then it must contain the `nextPageToken` value
   * returned by a previous call to this method.  Using this field causes the
   * method to return more results from the previous method call.
   * NOTE: this field is not yet implemented
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  constructor(data?: PartialMessage<ListUptimeCheckIpsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.monitoring.v3.ListUptimeCheckIpsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUptimeCheckIpsRequest {
    return new ListUptimeCheckIpsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUptimeCheckIpsRequest {
    return new ListUptimeCheckIpsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUptimeCheckIpsRequest {
    return new ListUptimeCheckIpsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListUptimeCheckIpsRequest | PlainMessage<ListUptimeCheckIpsRequest> | undefined, b: ListUptimeCheckIpsRequest | PlainMessage<ListUptimeCheckIpsRequest> | undefined): boolean {
    return proto3.util.equals(ListUptimeCheckIpsRequest, a, b);
  }
}

/**
 * The protocol for the `ListUptimeCheckIps` response.
 *
 * @generated from message google.monitoring.v3.ListUptimeCheckIpsResponse
 */
export class ListUptimeCheckIpsResponse extends Message<ListUptimeCheckIpsResponse> {
  /**
   * The returned list of IP addresses (including region and location) that the
   * checkers run from.
   *
   * @generated from field: repeated google.monitoring.v3.UptimeCheckIp uptime_check_ips = 1;
   */
  uptimeCheckIps: UptimeCheckIp[] = [];

  /**
   * This field represents the pagination token to retrieve the next page of
   * results. If the value is empty, it means no further results for the
   * request. To retrieve the next page of results, the value of the
   * next_page_token is passed to the subsequent List method call (in the
   * request message's page_token field).
   * NOTE: this field is not yet implemented
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListUptimeCheckIpsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.monitoring.v3.ListUptimeCheckIpsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uptime_check_ips", kind: "message", T: UptimeCheckIp, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUptimeCheckIpsResponse {
    return new ListUptimeCheckIpsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUptimeCheckIpsResponse {
    return new ListUptimeCheckIpsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUptimeCheckIpsResponse {
    return new ListUptimeCheckIpsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListUptimeCheckIpsResponse | PlainMessage<ListUptimeCheckIpsResponse> | undefined, b: ListUptimeCheckIpsResponse | PlainMessage<ListUptimeCheckIpsResponse> | undefined): boolean {
    return proto3.util.equals(ListUptimeCheckIpsResponse, a, b);
  }
}

