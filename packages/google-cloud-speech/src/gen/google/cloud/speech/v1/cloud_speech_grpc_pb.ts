// Manually written package definition to supply it to grpc.loadPackageDefinition().
// This will need to be generated by a protoc plugin to be written.
//
// Only code related to the regular Recognize RPC is here for the PoC.

import {PartialMessage} from '@bufbuild/protobuf';
import {RecognizeRequest, RecognizeResponse} from './cloud_speech_pb';

function serialize_google_cloud_speech_v1_RecognizeRequest(arg: PartialMessage<RecognizeRequest>) {
  return Buffer.from(new RecognizeRequest(arg).toBinary());
}

function deserialize_google_cloud_speech_v1_RecognizeRequest(buffer_arg: Buffer) {
  return RecognizeRequest.fromBinary(new Uint8Array(buffer_arg));
}

function serialize_google_cloud_speech_v1_RecognizeResponse(arg: PartialMessage<RecognizeResponse>) {
  return Buffer.from(new RecognizeResponse(arg).toBinary());
}

function deserialize_google_cloud_speech_v1_RecognizeResponse(buffer_arg: Buffer) {
  return RecognizeResponse.fromBinary(new Uint8Array(buffer_arg));
}

// Service that implements Google Cloud Speech API.
export const SpeechService = {
  'google.cloud.speech.v1.Speech': {
    Recognize: {
      path: '/google.cloud.speech.v1.Speech/Recognize',
      requestStream: false,
      responseStream: false,
      requestSerialize: serialize_google_cloud_speech_v1_RecognizeRequest,
      requestDeserialize: deserialize_google_cloud_speech_v1_RecognizeRequest,
      responseSerialize: serialize_google_cloud_speech_v1_RecognizeResponse,
      responseDeserialize: deserialize_google_cloud_speech_v1_RecognizeResponse,
      originalName: 'recognize',
      requestType: [Object],
      responseType: [Object]
    },
  },
};
